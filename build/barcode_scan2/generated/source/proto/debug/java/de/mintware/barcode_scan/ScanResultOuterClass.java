// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scan_result.proto

package de.mintware.barcode_scan;

public final class ScanResultOuterClass {
  private ScanResultOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code de.mintware.barcode_scan.ResultType}
   */
  public enum ResultType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Barcode = 0;</code>
     */
    Barcode(0),
    /**
     * <code>Cancelled = 1;</code>
     */
    Cancelled(1),
    /**
     * <code>Error = 2;</code>
     */
    Error(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Barcode = 0;</code>
     */
    public static final int Barcode_VALUE = 0;
    /**
     * <code>Cancelled = 1;</code>
     */
    public static final int Cancelled_VALUE = 1;
    /**
     * <code>Error = 2;</code>
     */
    public static final int Error_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResultType valueOf(int value) {
      return forNumber(value);
    }

    public static ResultType forNumber(int value) {
      switch (value) {
        case 0: return Barcode;
        case 1: return Cancelled;
        case 2: return Error;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultType>() {
            @java.lang.Override
            public ResultType findValueByNumber(int number) {
              return ResultType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ResultTypeVerifier.INSTANCE;
    }

    private static final class ResultTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ResultTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ResultType.forNumber(number) != null;
            }
          };

    private final int value;

    private ResultType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.mintware.barcode_scan.ResultType)
  }

  public interface ScanResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.mintware.barcode_scan.ScanResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @return The type.
     */
    de.mintware.barcode_scan.ScanResultOuterClass.ResultType getType();

    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @return The rawContent.
     */
    java.lang.String getRawContent();
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @return The bytes for rawContent.
     */
    com.google.protobuf.ByteString
        getRawContentBytes();

    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @return The enum numeric value on the wire for format.
     */
    int getFormatValue();
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @return The format.
     */
    de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat getFormat();

    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @return The formatNote.
     */
    java.lang.String getFormatNote();
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @return The bytes for formatNote.
     */
    com.google.protobuf.ByteString
        getFormatNoteBytes();
  }
  /**
   * Protobuf type {@code de.mintware.barcode_scan.ScanResult}
   */
  public  static final class ScanResult extends
      com.google.protobuf.GeneratedMessageLite<
          ScanResult, ScanResult.Builder> implements
      // @@protoc_insertion_point(message_implements:de.mintware.barcode_scan.ScanResult)
      ScanResultOrBuilder {
    private ScanResult() {
      rawContent_ = "";
      formatNote_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public de.mintware.barcode_scan.ScanResultOuterClass.ResultType getType() {
      de.mintware.barcode_scan.ScanResultOuterClass.ResultType result = de.mintware.barcode_scan.ScanResultOuterClass.ResultType.forNumber(type_);
      return result == null ? de.mintware.barcode_scan.ScanResultOuterClass.ResultType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(de.mintware.barcode_scan.ScanResultOuterClass.ResultType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Represents the type of the result
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int RAWCONTENT_FIELD_NUMBER = 2;
    private java.lang.String rawContent_;
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @return The rawContent.
     */
    @java.lang.Override
    public java.lang.String getRawContent() {
      return rawContent_;
    }
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @return The bytes for rawContent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRawContentBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(rawContent_);
    }
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @param value The rawContent to set.
     */
    private void setRawContent(
        java.lang.String value) {
      value.getClass();
  
      rawContent_ = value;
    }
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     */
    private void clearRawContent() {
      
      rawContent_ = getDefaultInstance().getRawContent();
    }
    /**
     * <pre>
     * The barcode itself if the result type is barcode.
     * If the result type is error it contains the error message
     * </pre>
     *
     * <code>string rawContent = 2;</code>
     * @param value The bytes for rawContent to set.
     */
    private void setRawContentBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      rawContent_ = value.toStringUtf8();
      
    }

    public static final int FORMAT_FIELD_NUMBER = 3;
    private int format_;
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override
    public int getFormatValue() {
      return format_;
    }
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @return The format.
     */
    @java.lang.Override
    public de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat getFormat() {
      de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat result = de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat.forNumber(format_);
      return result == null ? de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @param value The enum numeric value on the wire for format to set.
     */
    private void setFormatValue(int value) {
        format_ = value;
    }
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     * @param value The format to set.
     */
    private void setFormat(de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat value) {
      format_ = value.getNumber();
      
    }
    /**
     * <pre>
     * The barcode format
     * </pre>
     *
     * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
     */
    private void clearFormat() {
      
      format_ = 0;
    }

    public static final int FORMATNOTE_FIELD_NUMBER = 4;
    private java.lang.String formatNote_;
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @return The formatNote.
     */
    @java.lang.Override
    public java.lang.String getFormatNote() {
      return formatNote_;
    }
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @return The bytes for formatNote.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormatNoteBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(formatNote_);
    }
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @param value The formatNote to set.
     */
    private void setFormatNote(
        java.lang.String value) {
      value.getClass();
  
      formatNote_ = value;
    }
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     */
    private void clearFormatNote() {
      
      formatNote_ = getDefaultInstance().getFormatNote();
    }
    /**
     * <pre>
     * If the format is unknown, this field holds additional information
     * </pre>
     *
     * <code>string formatNote = 4;</code>
     * @param value The bytes for formatNote to set.
     */
    private void setFormatNoteBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      formatNote_ = value.toStringUtf8();
      
    }

    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.mintware.barcode_scan.ScanResultOuterClass.ScanResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code de.mintware.barcode_scan.ScanResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.mintware.barcode_scan.ScanResultOuterClass.ScanResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:de.mintware.barcode_scan.ScanResult)
        de.mintware.barcode_scan.ScanResultOuterClass.ScanResultOrBuilder {
      // Construct using de.mintware.barcode_scan.ScanResultOuterClass.ScanResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Represents the type of the result
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <pre>
       * Represents the type of the result
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Represents the type of the result
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public de.mintware.barcode_scan.ScanResultOuterClass.ResultType getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * Represents the type of the result
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(de.mintware.barcode_scan.ScanResultOuterClass.ResultType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * Represents the type of the result
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.ResultType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * The barcode itself if the result type is barcode.
       * If the result type is error it contains the error message
       * </pre>
       *
       * <code>string rawContent = 2;</code>
       * @return The rawContent.
       */
      @java.lang.Override
      public java.lang.String getRawContent() {
        return instance.getRawContent();
      }
      /**
       * <pre>
       * The barcode itself if the result type is barcode.
       * If the result type is error it contains the error message
       * </pre>
       *
       * <code>string rawContent = 2;</code>
       * @return The bytes for rawContent.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRawContentBytes() {
        return instance.getRawContentBytes();
      }
      /**
       * <pre>
       * The barcode itself if the result type is barcode.
       * If the result type is error it contains the error message
       * </pre>
       *
       * <code>string rawContent = 2;</code>
       * @param value The rawContent to set.
       * @return This builder for chaining.
       */
      public Builder setRawContent(
          java.lang.String value) {
        copyOnWrite();
        instance.setRawContent(value);
        return this;
      }
      /**
       * <pre>
       * The barcode itself if the result type is barcode.
       * If the result type is error it contains the error message
       * </pre>
       *
       * <code>string rawContent = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawContent() {
        copyOnWrite();
        instance.clearRawContent();
        return this;
      }
      /**
       * <pre>
       * The barcode itself if the result type is barcode.
       * If the result type is error it contains the error message
       * </pre>
       *
       * <code>string rawContent = 2;</code>
       * @param value The bytes for rawContent to set.
       * @return This builder for chaining.
       */
      public Builder setRawContentBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRawContentBytes(value);
        return this;
      }

      /**
       * <pre>
       * The barcode format
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
       * @return The enum numeric value on the wire for format.
       */
      @java.lang.Override
      public int getFormatValue() {
        return instance.getFormatValue();
      }
      /**
       * <pre>
       * The barcode format
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
       * @param value The format to set.
       * @return This builder for chaining.
       */
      public Builder setFormatValue(int value) {
        copyOnWrite();
        instance.setFormatValue(value);
        return this;
      }
      /**
       * <pre>
       * The barcode format
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
       * @return The format.
       */
      @java.lang.Override
      public de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat getFormat() {
        return instance.getFormat();
      }
      /**
       * <pre>
       * The barcode format
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
       * @param value The enum numeric value on the wire for format to set.
       * @return This builder for chaining.
       */
      public Builder setFormat(de.mintware.barcode_scan.BarcodeFormatOuterClass.BarcodeFormat value) {
        copyOnWrite();
        instance.setFormat(value);
        return this;
      }
      /**
       * <pre>
       * The barcode format
       * </pre>
       *
       * <code>.de.mintware.barcode_scan.BarcodeFormat format = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormat() {
        copyOnWrite();
        instance.clearFormat();
        return this;
      }

      /**
       * <pre>
       * If the format is unknown, this field holds additional information
       * </pre>
       *
       * <code>string formatNote = 4;</code>
       * @return The formatNote.
       */
      @java.lang.Override
      public java.lang.String getFormatNote() {
        return instance.getFormatNote();
      }
      /**
       * <pre>
       * If the format is unknown, this field holds additional information
       * </pre>
       *
       * <code>string formatNote = 4;</code>
       * @return The bytes for formatNote.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFormatNoteBytes() {
        return instance.getFormatNoteBytes();
      }
      /**
       * <pre>
       * If the format is unknown, this field holds additional information
       * </pre>
       *
       * <code>string formatNote = 4;</code>
       * @param value The formatNote to set.
       * @return This builder for chaining.
       */
      public Builder setFormatNote(
          java.lang.String value) {
        copyOnWrite();
        instance.setFormatNote(value);
        return this;
      }
      /**
       * <pre>
       * If the format is unknown, this field holds additional information
       * </pre>
       *
       * <code>string formatNote = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormatNote() {
        copyOnWrite();
        instance.clearFormatNote();
        return this;
      }
      /**
       * <pre>
       * If the format is unknown, this field holds additional information
       * </pre>
       *
       * <code>string formatNote = 4;</code>
       * @param value The bytes for formatNote to set.
       * @return This builder for chaining.
       */
      public Builder setFormatNoteBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFormatNoteBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.mintware.barcode_scan.ScanResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.mintware.barcode_scan.ScanResultOuterClass.ScanResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "rawContent_",
              "format_",
              "formatNote_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "\u0003\f\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.mintware.barcode_scan.ScanResultOuterClass.ScanResult> parser = PARSER;
          if (parser == null) {
            synchronized (de.mintware.barcode_scan.ScanResultOuterClass.ScanResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.mintware.barcode_scan.ScanResultOuterClass.ScanResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:de.mintware.barcode_scan.ScanResult)
    private static final de.mintware.barcode_scan.ScanResultOuterClass.ScanResult DEFAULT_INSTANCE;
    static {
      ScanResult defaultInstance = new ScanResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ScanResult.class, defaultInstance);
    }

    public static de.mintware.barcode_scan.ScanResultOuterClass.ScanResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ScanResult> PARSER;

    public static com.google.protobuf.Parser<ScanResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
