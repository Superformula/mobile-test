// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: android_configuration.proto

package de.mintware.barcode_scan;

public final class AndroidConfigurationOuterClass {
  private AndroidConfigurationOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface AndroidConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.mintware.barcode_scan.AndroidConfiguration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>double aspectTolerance = 1;</code>
     * @return The aspectTolerance.
     */
    double getAspectTolerance();

    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>bool useAutoFocus = 2;</code>
     * @return The useAutoFocus.
     */
    boolean getUseAutoFocus();
  }
  /**
   * Protobuf type {@code de.mintware.barcode_scan.AndroidConfiguration}
   */
  public  static final class AndroidConfiguration extends
      com.google.protobuf.GeneratedMessageLite<
          AndroidConfiguration, AndroidConfiguration.Builder> implements
      // @@protoc_insertion_point(message_implements:de.mintware.barcode_scan.AndroidConfiguration)
      AndroidConfigurationOrBuilder {
    private AndroidConfiguration() {
    }
    public static final int ASPECTTOLERANCE_FIELD_NUMBER = 1;
    private double aspectTolerance_;
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>double aspectTolerance = 1;</code>
     * @return The aspectTolerance.
     */
    @java.lang.Override
    public double getAspectTolerance() {
      return aspectTolerance_;
    }
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>double aspectTolerance = 1;</code>
     * @param value The aspectTolerance to set.
     */
    private void setAspectTolerance(double value) {
      
      aspectTolerance_ = value;
    }
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>double aspectTolerance = 1;</code>
     */
    private void clearAspectTolerance() {
      
      aspectTolerance_ = 0D;
    }

    public static final int USEAUTOFOCUS_FIELD_NUMBER = 2;
    private boolean useAutoFocus_;
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>bool useAutoFocus = 2;</code>
     * @return The useAutoFocus.
     */
    @java.lang.Override
    public boolean getUseAutoFocus() {
      return useAutoFocus_;
    }
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>bool useAutoFocus = 2;</code>
     * @param value The useAutoFocus to set.
     */
    private void setUseAutoFocus(boolean value) {
      
      useAutoFocus_ = value;
    }
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>bool useAutoFocus = 2;</code>
     */
    private void clearUseAutoFocus() {
      
      useAutoFocus_ = false;
    }

    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code de.mintware.barcode_scan.AndroidConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration, Builder> implements
        // @@protoc_insertion_point(builder_implements:de.mintware.barcode_scan.AndroidConfiguration)
        de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfigurationOrBuilder {
      // Construct using de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>double aspectTolerance = 1;</code>
       * @return The aspectTolerance.
       */
      @java.lang.Override
      public double getAspectTolerance() {
        return instance.getAspectTolerance();
      }
      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>double aspectTolerance = 1;</code>
       * @param value The aspectTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setAspectTolerance(double value) {
        copyOnWrite();
        instance.setAspectTolerance(value);
        return this;
      }
      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>double aspectTolerance = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAspectTolerance() {
        copyOnWrite();
        instance.clearAspectTolerance();
        return this;
      }

      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>bool useAutoFocus = 2;</code>
       * @return The useAutoFocus.
       */
      @java.lang.Override
      public boolean getUseAutoFocus() {
        return instance.getUseAutoFocus();
      }
      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>bool useAutoFocus = 2;</code>
       * @param value The useAutoFocus to set.
       * @return This builder for chaining.
       */
      public Builder setUseAutoFocus(boolean value) {
        copyOnWrite();
        instance.setUseAutoFocus(value);
        return this;
      }
      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>bool useAutoFocus = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseAutoFocus() {
        copyOnWrite();
        instance.clearUseAutoFocus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.mintware.barcode_scan.AndroidConfiguration)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "aspectTolerance_",
              "useAutoFocus_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0007" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration> parser = PARSER;
          if (parser == null) {
            synchronized (de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:de.mintware.barcode_scan.AndroidConfiguration)
    private static final de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration DEFAULT_INSTANCE;
    static {
      AndroidConfiguration defaultInstance = new AndroidConfiguration();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AndroidConfiguration.class, defaultInstance);
    }

    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AndroidConfiguration> PARSER;

    public static com.google.protobuf.Parser<AndroidConfiguration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
