define(['dart_sdk', 'packages/qr_code_scanner/src/types/camera.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/qr_code_scanner/src/types/barcode.dart', 'packages/qr_code_scanner/src/types/barcode_format.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/widgets/platform_view.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/qr_code_scanner/src/types/features.dart', 'packages/qr_code_scanner/src/qr_scanner_overlay_shape.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/qr_code_scanner/src/lifecycle_event_handler.dart', 'packages/flutter/src/widgets/size_changed_layout_notifier.dart', 'packages/flutter/src/painting/shape_decoration.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/qr_code_scanner/src/types/camera_exception.dart'], (function load__packages__qr_code_scanner__src__web__flutter_qr_web_dart(dart_sdk, packages__qr_code_scanner__src__types__camera$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__qr_code_scanner__src__types__barcode$46dart, packages__qr_code_scanner__src__types__barcode_format$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__widgets__platform_view$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__services__system_channels$46dart, packages__qr_code_scanner__src__types__features$46dart, packages__qr_code_scanner__src__qr_scanner_overlay_shape$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__qr_code_scanner__src__lifecycle_event_handler$46dart, packages__flutter__src__widgets__size_changed_layout_notifier$46dart, packages__flutter__src__painting__shape_decoration$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__qr_code_scanner__src__types__camera_exception$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const html = dart_sdk.html;
  const async = dart_sdk.async;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const js_util = dart_sdk.js_util;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const camera = packages__qr_code_scanner__src__types__camera$46dart.src__types__camera;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const barcode$ = packages__qr_code_scanner__src__types__barcode$46dart.src__types__barcode;
  const barcode_format = packages__qr_code_scanner__src__types__barcode_format$46dart.src__types__barcode_format;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const platform_view = packages__flutter__src__widgets__platform_view$46dart.src__widgets__platform_view;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const platform_channel = packages__flutter__src__services__system_channels$46dart.src__services__platform_channel;
  const message_codecs = packages__flutter__src__services__system_channels$46dart.src__services__message_codecs;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  const features$ = packages__qr_code_scanner__src__types__features$46dart.src__types__features;
  const qr_scanner_overlay_shape = packages__qr_code_scanner__src__qr_scanner_overlay_shape$46dart.src__qr_scanner_overlay_shape;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const lifecycle_event_handler = packages__qr_code_scanner__src__lifecycle_event_handler$46dart.src__lifecycle_event_handler;
  const size_changed_layout_notifier = packages__flutter__src__widgets__size_changed_layout_notifier$46dart.src__widgets__size_changed_layout_notifier;
  const shape_decoration = packages__flutter__src__painting__shape_decoration$46dart.src__painting__shape_decoration;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const camera_exception = packages__qr_code_scanner__src__types__camera_exception$46dart.src__types__camera_exception;
  var flutter_qr_web = Object.create(dart.library);
  var qr_code_scanner = Object.create(dart.library);
  var qr_code_scanner$ = Object.create(dart.library);
  var $navigator = dartx.navigator;
  var $enumerateDevices = dartx.enumerateDevices;
  var $toString = dartx.toString;
  var $children = dartx.children;
  var $getTracks = dartx.getTracks;
  var $forEach = dartx.forEach;
  var $context2D = dartx.context2D;
  var $getImageData = dartx.getImageData;
  var $toDouble = dartx.toDouble;
  var $data = dartx.data;
  var $codeUnits = dartx.codeUnits;
  var $noSuchMethod = dartx.noSuchMethod;
  var $_get = dartx._get;
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    StreamControllerOfBarcode: () => (T.StreamControllerOfBarcode = dart.constFn(async.StreamController$(barcode$.Barcode)))(),
    JSArrayOfElement: () => (T.JSArrayOfElement = dart.constFn(_interceptors.JSArray$(html.Element)))(),
    intToDivElement: () => (T.intToDivElement = dart.constFn(dart.fnType(html.DivElement, [core.int])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    TimerTovoid: () => (T.TimerTovoid = dart.constFn(dart.fnType(dart.void, [async.Timer])))(),
    MediaStreamN: () => (T.MediaStreamN = dart.constFn(dart.nullable(html.MediaStream)))(),
    MediaStreamTrackTovoid: () => (T.MediaStreamTrackTovoid = dart.constFn(dart.fnType(dart.void, [html.MediaStreamTrack])))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    BuildContextAndBoxConstraintsToSizedBox: () => (T.BuildContextAndBoxConstraintsToSizedBox = dart.constFn(dart.fnType(basic.SizedBox, [framework.BuildContext, box.BoxConstraints])))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    QRViewControllerTovoid: () => (T.QRViewControllerTovoid = dart.constFn(dart.fnType(dart.void, [qr_code_scanner.QRViewController])))(),
    NotificationListenerOfNotification: () => (T.NotificationListenerOfNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.Notification)))(),
    StateOfStatefulWidget: () => (T.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T.StateOfStatefulWidget())))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    GlobalKeyNOfStateOfStatefulWidget: () => (T.GlobalKeyNOfStateOfStatefulWidget = dart.constFn(dart.nullable(T.GlobalKeyOfStateOfStatefulWidget())))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ListOfint: () => (T.ListOfint = dart.constFn(core.List$(core.int)))(),
    ListNOfint: () => (T.ListNOfint = dart.constFn(dart.nullable(T.ListOfint())))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    MethodCallToFutureOfNull: () => (T.MethodCallToFutureOfNull = dart.constFn(dart.fnType(T.FutureOfNull(), [message_codec.MethodCall])))(),
    BarcodeFormatToint: () => (T.BarcodeFormatToint = dart.constFn(dart.fnType(core.int, [barcode_format.BarcodeFormat])))(),
    IdentityMapOfString$double: () => (T.IdentityMapOfString$double = dart.constFn(_js_helper.IdentityMap$(core.String, core.double)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: camera.CameraFacing.prototype,
        [_name]: "CameraFacing.front",
        index: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 42,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3], widget_inspector._Location);
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 202,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6], widget_inspector._Location);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 202,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C8() {
      return C[8] = dart.constList([], widget_inspector._Location);
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[8] || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11], widget_inspector._Location);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewType",
        [_Location_column]: 40,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.constList([C[14] || CT.C14], widget_inspector._Location);
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[13] || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 229,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 17,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.constList([C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19], widget_inspector._Location);
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[16] || CT.C16,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 226,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 15,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23], widget_inspector._Location);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 224,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.constList([C[26] || CT.C26], widget_inspector._Location);
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[25] || CT.C25,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 223,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.constList([C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31], widget_inspector._Location);
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[28] || CT.C28,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34], widget_inspector._Location);
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 207,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C35() {
      return C[35] = dart.const(new _js_helper.PrivateSymbol.new('_startScan', _startScan));
    },
    get C36() {
      return C[36] = dart.const(new _js_helper.PrivateSymbol.new('_scanUpdateController', _scanUpdateController));
    },
    get C37() {
      return C[37] = dart.const(new _js_helper.PrivateSymbol.new('_hasPermissions', _hasPermissions));
    },
    get C38() {
      return C[38] = dart.const(new _js_helper.PrivateSymbol.new('_cameraFacing', _cameraFacing));
    },
    get C39() {
      return C[39] = dart.const(new _js_helper.PrivateSymbol.new('_channel', _channel));
    },
    get C40() {
      return C[40] = dart.const(new _js_helper.PrivateSymbol.new('_hasPermissions=', _hasPermissions_));
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPlatformViewCreated",
        [_Location_column]: 7,
        [_Location_line]: 313,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cameraFacing",
        [_Location_column]: 7,
        [_Location_line]: 314,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.constList([C[43] || CT.C43, C[44] || CT.C44], widget_inspector._Location);
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[42] || CT.C42,
        [_Location_name]: null,
        [_Location_column]: 5,
        [_Location_line]: 312,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/web/flutter_qr_web.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: camera.CameraFacing.prototype,
        [_name]: "CameraFacing.back",
        index: 0
      });
    },
    get C47() {
      return C[47] = dart.constList([], barcode_format.BarcodeFormat);
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.constList([C[50] || CT.C50], widget_inspector._Location);
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[49] || CT.C49,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 75,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 75,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.constList([C[53] || CT.C53, C[54] || CT.C54], widget_inspector._Location);
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[52] || CT.C52,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 73,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.constList([C[57] || CT.C57, C[58] || CT.C58], widget_inspector._Location);
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[56] || CT.C56,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 104,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.constList([C[61] || CT.C61], widget_inspector._Location);
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[60] || CT.C60,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 101,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewType",
        [_Location_column]: 13,
        [_Location_line]: 125,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPlatformViewCreated",
        [_Location_column]: 13,
        [_Location_line]: 126,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "creationParams",
        [_Location_column]: 13,
        [_Location_line]: 127,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "creationParamsCodec",
        [_Location_column]: 13,
        [_Location_line]: 129,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.constList([C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67], widget_inspector._Location);
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[63] || CT.C63,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 124,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.android",
        index: 0
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewType",
        [_Location_column]: 13,
        [_Location_line]: 134,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPlatformViewCreated",
        [_Location_column]: 13,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "creationParams",
        [_Location_column]: 13,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "creationParamsCodec",
        [_Location_column]: 13,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.constList([C[71] || CT.C71, C[72] || CT.C72, C[73] || CT.C73, C[74] || CT.C74], widget_inspector._Location);
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[70] || CT.C70,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 133,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/qr_code_scanner-0.5.2/lib/src/qr_code_scanner.dart"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: camera.CameraFacing.prototype,
        [_name]: "CameraFacing.unknown",
        index: 2
      });
    }
  }, false);
  var C = Array(77).fill(void 0);
  var I = [
    "package:qr_code_scanner/src/web/flutter_qr_web.dart",
    "package:qr_code_scanner/src/qr_code_scanner.dart"
  ];
  var onPlatformViewCreated$ = dart.privateName(flutter_qr_web, "WebQrView.onPlatformViewCreated");
  var cameraFacing$ = dart.privateName(flutter_qr_web, "WebQrView.cameraFacing");
  var _name = dart.privateName(camera, "_name");
  flutter_qr_web.WebQrView = class WebQrView extends framework.StatefulWidget {
    get onPlatformViewCreated() {
      return this[onPlatformViewCreated$];
    }
    set onPlatformViewCreated(value) {
      super.onPlatformViewCreated = value;
    }
    get cameraFacing() {
      return this[cameraFacing$];
    }
    set cameraFacing(value) {
      super.cameraFacing = value;
    }
    createState() {
      return new flutter_qr_web._WebQrViewState.new();
    }
    static cameraAvailable() {
      return async.async(core.bool, function* cameraAvailable() {
        let sources = (yield dart.nullCheck(html.window[$navigator].mediaDevices)[$enumerateDevices]());
        let hasCam = false;
        for (let e of sources) {
          if (dart.equals(dart.dload(e, 'kind'), "videoinput")) {
            hasCam = true;
          }
        }
        return hasCam;
      });
    }
  };
  (flutter_qr_web.WebQrView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPlatformViewCreated = opts && 'onPlatformViewCreated' in opts ? opts.onPlatformViewCreated : null;
    let cameraFacing = opts && 'cameraFacing' in opts ? opts.cameraFacing : C[0] || CT.C0;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPlatformViewCreated$] = onPlatformViewCreated;
    this[cameraFacing$] = cameraFacing;
    flutter_qr_web.WebQrView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flutter_qr_web.WebQrView.prototype;
  dart.addTypeTests(flutter_qr_web.WebQrView);
  dart.addTypeCaches(flutter_qr_web.WebQrView);
  dart.setMethodSignature(flutter_qr_web.WebQrView, () => ({
    __proto__: dart.getMethods(flutter_qr_web.WebQrView.__proto__),
    createState: dart.fnType(flutter_qr_web._WebQrViewState, [])
  }));
  dart.setLibraryUri(flutter_qr_web.WebQrView, I[0]);
  dart.setFieldSignature(flutter_qr_web.WebQrView, () => ({
    __proto__: dart.getFields(flutter_qr_web.WebQrView.__proto__),
    onPlatformViewCreated: dart.finalFieldType(dart.fnType(dart.void, [qr_code_scanner.QRViewController])),
    cameraFacing: dart.finalFieldType(dart.nullable(camera.CameraFacing))
  }));
  dart.defineLazy(flutter_qr_web.WebQrView, {
    /*flutter_qr_web.WebQrView.vidDiv*/get vidDiv() {
      return html.DivElement.new();
    },
    set vidDiv(_) {}
  }, false);
  var _localStream = dart.privateName(flutter_qr_web, "_localStream");
  var _currentlyProcessing = dart.privateName(flutter_qr_web, "_currentlyProcessing");
  var _controller = dart.privateName(flutter_qr_web, "_controller");
  var ___WebQrViewState__size = dart.privateName(flutter_qr_web, "_#_WebQrViewState#_size");
  var _errorMsg = dart.privateName(flutter_qr_web, "_errorMsg");
  var _scanUpdateController = dart.privateName(flutter_qr_web, "_scanUpdateController");
  var ___WebQrViewState_facing = dart.privateName(flutter_qr_web, "_#_WebQrViewState#facing");
  var _frameIntervall = dart.privateName(flutter_qr_web, "_frameIntervall");
  var _size = dart.privateName(flutter_qr_web, "_size");
  var _makeCall = dart.privateName(flutter_qr_web, "_makeCall");
  var _captureFrame2 = dart.privateName(flutter_qr_web, "_captureFrame2");
  var _stopStream = dart.privateName(flutter_qr_web, "_stopStream");
  var _setCanvasSize = dart.privateName(flutter_qr_web, "_setCanvasSize");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  flutter_qr_web._WebQrViewState = class _WebQrViewState extends framework.State$(flutter_qr_web.WebQrView) {
    get [_size]() {
      let t0;
      t0 = this[___WebQrViewState__size];
      return t0 == null ? this[___WebQrViewState__size] = new ui.Size.new(0.0, 0.0) : t0;
    }
    set [_size](t0) {
      this[___WebQrViewState__size] = t0;
    }
    get facing() {
      let t1;
      t1 = this[___WebQrViewState_facing];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("facing")) : t1;
    }
    set facing(t1) {
      this[___WebQrViewState_facing] = t1;
    }
    initState() {
      let t2;
      super.initState();
      this.facing = (t2 = this.widget.cameraFacing, t2 == null ? camera.CameraFacing.front : t2);
      this.video = html.VideoElement.new();
      flutter_qr_web.WebQrView.vidDiv[$children] = T.JSArrayOfElement().of([html.Element.as(this.video)]);
      ui.platformViewRegistry.registerViewFactory(this.viewID, dart.fn(id => flutter_qr_web.WebQrView.vidDiv, T.intToDivElement()));
      async.Timer.new(new core.Duration.new({milliseconds: 500}), dart.fn(() => {
        this.start();
      }, T.VoidTovoid()));
    }
    start() {
      return async.async(dart.dynamic, (function* start() {
        let t2;
        yield this[_makeCall]();
        t2 = this[_frameIntervall];
        t2 == null ? null : t2.cancel();
        this[_frameIntervall] = async.Timer.periodic(new core.Duration.new({milliseconds: 200}), dart.fn(timer => {
          this[_captureFrame2]();
        }, T.TimerTovoid()));
      }).bind(this));
    }
    cancel() {
      if (this.timer != null) {
        dart.nullCheck(this.timer).cancel();
        this.timer = null;
      }
      if (this[_currentlyProcessing]) {
        this[_stopStream]();
      }
    }
    dispose() {
      this.cancel();
      super.dispose();
    }
    [_makeCall]() {
      return async.async(dart.void, (function* _makeCall() {
        let t3, t2;
        if (this[_localStream] != null) {
          return;
        }
        try {
          let constraints = {video: {facingMode: this.facing === camera.CameraFacing.front ? "user" : "environment"}};
          let stream = (yield js_util.promiseToFuture(dart.dynamic, dart.global.navigator.mediaDevices.getUserMedia(constraints)));
          this[_localStream] = T.MediaStreamN().as(stream);
          dart.dput(this.video, 'srcObject', this[_localStream]);
          dart.dsend(this.video, 'setAttribute', ["playsinline", "true"]);
          if (this[_controller] == null) {
            this[_controller] = new flutter_qr_web.QRViewControllerWeb.new(this);
            t2 = this.widget;
            t3 = dart.nullCheck(this[_controller]);
            t2.onPlatformViewCreated(t3);
          }
          yield dart.dsend(this.video, 'play', []);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this.cancel();
            this.setState(dart.fn(() => {
              this[_errorMsg] = e[$toString]();
            }, T.VoidTovoid()));
            return;
          } else
            throw e$;
        }
        if (!this.mounted) return;
        this.setState(dart.fn(() => {
          this[_currentlyProcessing] = true;
        }, T.VoidTovoid()));
      }).bind(this));
    }
    [_stopStream]() {
      return async.async(dart.void, (function* _stopStream() {
        try {
          dart.nullCheck(this[_localStream])[$getTracks]()[$forEach](dart.fn(track => {
            if (track.readyState === "live") {
              track.stop();
            }
          }, T.MediaStreamTrackTovoid()));
          dart.dput(this.video, 'srcObject', null);
          this[_localStream] = null;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
          } else
            throw e$;
        }
      }).bind(this));
    }
    [_captureFrame2]() {
      return async.async(dart.dynamic, (function* _captureFrame2() {
        let t4, t4$, t4$0, t4$1;
        if (this[_localStream] == null) {
          return null;
        }
        let canvas = html.CanvasElement.new({width: T.intN().as(dart.dload(this.video, 'videoWidth')), height: T.intN().as(dart.dload(this.video, 'videoHeight'))});
        let ctx = canvas[$context2D];
        ctx.drawImage(html.CanvasImageSource.as(this.video), 0, 0);
        let imgData = ctx[$getImageData](0, 0, dart.nullCheck(canvas.width), dart.nullCheck(canvas.height));
        let size = new ui.Size.new((t4$ = (t4 = canvas.width, t4 == null ? null : t4[$toDouble]()), t4$ == null ? 0.0 : t4$), (t4$1 = (t4$0 = canvas.height, t4$0 == null ? null : t4$0[$toDouble]()), t4$1 == null ? 0.0 : t4$1));
        if (!size._equals(this[_size])) {
          this.setState(dart.fn(() => {
            this[_setCanvasSize](size);
          }, T.VoidTovoid()));
        }
        let code = dart.global.jsQR(imgData[$data], canvas.width, canvas.height);
        if (code !== null) {
          this[_scanUpdateController].add(new barcode$.Barcode.new(code.data, barcode_format.BarcodeFormat.qrcode, code.data[$codeUnits]));
        }
      }).bind(this));
    }
    build(context) {
      if (this[_errorMsg] != null) {
        return new basic.Center.new({child: new text.Text.new(dart.nullCheck(this[_errorMsg]), {$creationLocationd_0dea112b090073317d4: C[1] || CT.C1}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
      }
      if (this[_localStream] == null) {
        return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new({$creationLocationd_0dea112b090073317d4: C[7] || CT.C7}), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
      }
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let zoom = 1.0;
          if (this[_size].height !== 0) zoom = constraints.maxHeight / this[_size].height;
          if (this[_size].width !== 0) {
            let horizontalZoom = constraints.maxWidth / this[_size].width;
            if (horizontalZoom > zoom) {
              zoom = horizontalZoom;
            }
          }
          return new basic.SizedBox.new({width: constraints.maxWidth, height: constraints.maxHeight, child: new basic.Center.new({child: new basic.SizedBox.fromSize({size: this[_size], child: new basic.Transform.scale({alignment: alignment.Alignment.center, scale: zoom, child: new platform_view.HtmlElementView.new({viewType: this.viewID, $creationLocationd_0dea112b090073317d4: C[12] || CT.C12}), $creationLocationd_0dea112b090073317d4: C[15] || CT.C15}), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20}), $creationLocationd_0dea112b090073317d4: C[24] || CT.C24}), $creationLocationd_0dea112b090073317d4: C[27] || CT.C27});
        }, T.BuildContextAndBoxConstraintsToSizedBox()), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32});
    }
    [_setCanvasSize](size) {
      this.setState(dart.fn(() => {
        this[_size] = size;
      }, T.VoidTovoid()));
    }
  };
  (flutter_qr_web._WebQrViewState.new = function() {
    this[_localStream] = null;
    this[_currentlyProcessing] = false;
    this[_controller] = null;
    this[___WebQrViewState__size] = null;
    this.timer = null;
    this.code = null;
    this[_errorMsg] = null;
    this.video = null;
    this.viewID = "QRVIEW-" + new core.DateTime.now().millisecondsSinceEpoch[$toString]();
    this[_scanUpdateController] = T.StreamControllerOfBarcode().new();
    this[___WebQrViewState_facing] = null;
    this[_frameIntervall] = null;
    flutter_qr_web._WebQrViewState.__proto__.new.call(this);
    ;
  }).prototype = flutter_qr_web._WebQrViewState.prototype;
  dart.addTypeTests(flutter_qr_web._WebQrViewState);
  dart.addTypeCaches(flutter_qr_web._WebQrViewState);
  dart.setMethodSignature(flutter_qr_web._WebQrViewState, () => ({
    __proto__: dart.getMethods(flutter_qr_web._WebQrViewState.__proto__),
    start: dart.fnType(async.Future, []),
    cancel: dart.fnType(dart.void, []),
    [_makeCall]: dart.fnType(async.Future$(dart.void), []),
    [_stopStream]: dart.fnType(async.Future$(dart.void), []),
    [_captureFrame2]: dart.fnType(async.Future, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_setCanvasSize]: dart.fnType(dart.void, [ui.Size])
  }));
  dart.setGetterSignature(flutter_qr_web._WebQrViewState, () => ({
    __proto__: dart.getGetters(flutter_qr_web._WebQrViewState.__proto__),
    [_size]: ui.Size,
    facing: camera.CameraFacing
  }));
  dart.setSetterSignature(flutter_qr_web._WebQrViewState, () => ({
    __proto__: dart.getSetters(flutter_qr_web._WebQrViewState.__proto__),
    [_size]: ui.Size,
    facing: camera.CameraFacing
  }));
  dart.setLibraryUri(flutter_qr_web._WebQrViewState, I[0]);
  dart.setFieldSignature(flutter_qr_web._WebQrViewState, () => ({
    __proto__: dart.getFields(flutter_qr_web._WebQrViewState.__proto__),
    [_localStream]: dart.fieldType(dart.nullable(html.MediaStream)),
    [_currentlyProcessing]: dart.fieldType(core.bool),
    [_controller]: dart.fieldType(dart.nullable(flutter_qr_web.QRViewControllerWeb)),
    [___WebQrViewState__size]: dart.fieldType(dart.nullable(ui.Size)),
    timer: dart.fieldType(dart.nullable(async.Timer)),
    code: dart.fieldType(dart.nullable(core.String)),
    [_errorMsg]: dart.fieldType(dart.nullable(core.String)),
    video: dart.fieldType(dart.dynamic),
    viewID: dart.fieldType(core.String),
    [_scanUpdateController]: dart.finalFieldType(async.StreamController$(barcode$.Barcode)),
    [___WebQrViewState_facing]: dart.fieldType(dart.nullable(camera.CameraFacing)),
    [_frameIntervall]: dart.fieldType(dart.nullable(async.Timer))
  }));
  var _state$ = dart.privateName(flutter_qr_web, "_state");
  var _startScan = dart.privateName(flutter_qr_web, "_startScan");
  var _startScan$ = dart.privateName(qr_code_scanner, "_startScan");
  var _scanUpdateController$ = dart.privateName(qr_code_scanner, "_scanUpdateController");
  var _hasPermissions = dart.privateName(flutter_qr_web, "_hasPermissions");
  var _hasPermissions$ = dart.privateName(qr_code_scanner, "_hasPermissions");
  var _cameraFacing = dart.privateName(flutter_qr_web, "_cameraFacing");
  var _cameraFacing$ = dart.privateName(qr_code_scanner, "_cameraFacing");
  var _channel = dart.privateName(flutter_qr_web, "_channel");
  var _channel$ = dart.privateName(qr_code_scanner, "_channel");
  var _hasPermissions_ = dart.privateName(flutter_qr_web, "_hasPermissions=");
  flutter_qr_web.QRViewControllerWeb = class QRViewControllerWeb extends core.Object {
    dispose() {
      return this[_state$].cancel();
    }
    flipCamera() {
      return async.async(camera.CameraFacing, (function* flipCamera() {
        this[_state$].facing = this[_state$].facing === camera.CameraFacing.front ? camera.CameraFacing.back : camera.CameraFacing.front;
        yield this[_state$].start();
        return this[_state$].facing;
      }).bind(this));
    }
    getCameraInfo() {
      return async.async(camera.CameraFacing, (function* getCameraInfo() {
        return this[_state$].facing;
      }).bind(this));
    }
    getFlashStatus() {
      return async.async(T.boolN(), function* getFlashStatus() {
        return false;
      });
    }
    getSystemFeatures() {
      dart.throw(new core.UnimplementedError.new());
    }
    get hasPermissions() {
      return dart.throw(new core.UnimplementedError.new());
    }
    pauseCamera() {
      dart.throw(new core.UnimplementedError.new());
    }
    resumeCamera() {
      dart.throw(new core.UnimplementedError.new());
    }
    get scannedDataStream() {
      return this[_state$][_scanUpdateController].stream;
    }
    stopCamera() {
      dart.throw(new core.UnimplementedError.new());
    }
    toggleFlash() {
      return async.async(dart.void, function* toggleFlash() {
        return;
      });
    }
    [_startScan$](key, overlay, barcodeFormats) {
      return T.FutureOfvoid().as(this[$noSuchMethod](new core._Invocation.method(C[35] || CT.C35, null, [key, overlay, barcodeFormats])));
    }
    get [_scanUpdateController$]() {
      return T.StreamControllerOfBarcode().as(this[$noSuchMethod](new core._Invocation.getter(C[36] || CT.C36)));
    }
    get [_hasPermissions$]() {
      return core.bool.as(this[$noSuchMethod](new core._Invocation.getter(C[37] || CT.C37)));
    }
    get [_cameraFacing$]() {
      return camera.CameraFacing.as(this[$noSuchMethod](new core._Invocation.getter(C[38] || CT.C38)));
    }
    get [_channel$]() {
      return platform_channel.MethodChannel.as(this[$noSuchMethod](new core._Invocation.getter(C[39] || CT.C39)));
    }
    set [_hasPermissions$](value) {
      return this[$noSuchMethod](new core._Invocation.setter(C[40] || CT.C40, value));
    }
  };
  (flutter_qr_web.QRViewControllerWeb.new = function(_state) {
    this[_state$] = _state;
    ;
  }).prototype = flutter_qr_web.QRViewControllerWeb.prototype;
  dart.addTypeTests(flutter_qr_web.QRViewControllerWeb);
  dart.addTypeCaches(flutter_qr_web.QRViewControllerWeb);
  flutter_qr_web.QRViewControllerWeb[dart.implements] = () => [qr_code_scanner.QRViewController];
  dart.setMethodSignature(flutter_qr_web.QRViewControllerWeb, () => ({
    __proto__: dart.getMethods(flutter_qr_web.QRViewControllerWeb.__proto__),
    dispose: dart.fnType(dart.void, []),
    flipCamera: dart.fnType(async.Future$(camera.CameraFacing), []),
    getCameraInfo: dart.fnType(async.Future$(camera.CameraFacing), []),
    getFlashStatus: dart.fnType(async.Future$(dart.nullable(core.bool)), []),
    getSystemFeatures: dart.fnType(async.Future$(features$.SystemFeatures), []),
    pauseCamera: dart.fnType(async.Future$(dart.void), []),
    resumeCamera: dart.fnType(async.Future$(dart.void), []),
    stopCamera: dart.fnType(async.Future$(dart.void), []),
    toggleFlash: dart.fnType(async.Future$(dart.void), []),
    [_startScan$]: dart.fnType(async.Future$(dart.void), [framework.GlobalKey$(framework.State$(framework.StatefulWidget)), dart.nullable(qr_scanner_overlay_shape.QrScannerOverlayShape), dart.nullable(core.List$(barcode_format.BarcodeFormat))])
  }));
  dart.setGetterSignature(flutter_qr_web.QRViewControllerWeb, () => ({
    __proto__: dart.getGetters(flutter_qr_web.QRViewControllerWeb.__proto__),
    hasPermissions: core.bool,
    scannedDataStream: async.Stream$(barcode$.Barcode),
    [_scanUpdateController$]: async.StreamController$(barcode$.Barcode),
    [_hasPermissions$]: core.bool,
    [_cameraFacing$]: camera.CameraFacing,
    [_channel$]: platform_channel.MethodChannel
  }));
  dart.setSetterSignature(flutter_qr_web.QRViewControllerWeb, () => ({
    __proto__: dart.getSetters(flutter_qr_web.QRViewControllerWeb.__proto__),
    [_hasPermissions$]: core.bool
  }));
  dart.setLibraryUri(flutter_qr_web.QRViewControllerWeb, I[0]);
  dart.setFieldSignature(flutter_qr_web.QRViewControllerWeb, () => ({
    __proto__: dart.getFields(flutter_qr_web.QRViewControllerWeb.__proto__),
    [_state$]: dart.finalFieldType(flutter_qr_web._WebQrViewState)
  }));
  flutter_qr_web.createWebQrView = function createWebQrView(opts) {
    let onPlatformViewCreated = opts && 'onPlatformViewCreated' in opts ? opts.onPlatformViewCreated : null;
    let cameraFacing = opts && 'cameraFacing' in opts ? opts.cameraFacing : null;
    return new flutter_qr_web.WebQrView.new({onPlatformViewCreated: T.QRViewControllerTovoid().as(onPlatformViewCreated), cameraFacing: cameraFacing, $creationLocationd_0dea112b090073317d4: C[41] || CT.C41});
  };
  var onQRViewCreated$ = dart.privateName(qr_code_scanner, "QRView.onQRViewCreated");
  var overlay$ = dart.privateName(qr_code_scanner, "QRView.overlay");
  var overlayMargin$ = dart.privateName(qr_code_scanner, "QRView.overlayMargin");
  var cameraFacing$0 = dart.privateName(qr_code_scanner, "QRView.cameraFacing");
  var onPermissionSet$ = dart.privateName(qr_code_scanner, "QRView.onPermissionSet");
  var formatsAllowed$ = dart.privateName(qr_code_scanner, "QRView.formatsAllowed");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  qr_code_scanner.QRView = class QRView extends framework.StatefulWidget {
    get onQRViewCreated() {
      return this[onQRViewCreated$];
    }
    set onQRViewCreated(value) {
      super.onQRViewCreated = value;
    }
    get overlay() {
      return this[overlay$];
    }
    set overlay(value) {
      super.overlay = value;
    }
    get overlayMargin() {
      return this[overlayMargin$];
    }
    set overlayMargin(value) {
      super.overlayMargin = value;
    }
    get cameraFacing() {
      return this[cameraFacing$0];
    }
    set cameraFacing(value) {
      super.cameraFacing = value;
    }
    get onPermissionSet() {
      return this[onPermissionSet$];
    }
    set onPermissionSet(value) {
      super.onPermissionSet = value;
    }
    get formatsAllowed() {
      return this[formatsAllowed$];
    }
    set formatsAllowed(value) {
      super.formatsAllowed = value;
    }
    createState() {
      return new qr_code_scanner._QRViewState.new();
    }
  };
  (qr_code_scanner.QRView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onQRViewCreated = opts && 'onQRViewCreated' in opts ? opts.onQRViewCreated : null;
    let overlay = opts && 'overlay' in opts ? opts.overlay : null;
    let overlayMargin = opts && 'overlayMargin' in opts ? opts.overlayMargin : C[45] || CT.C45;
    let cameraFacing = opts && 'cameraFacing' in opts ? opts.cameraFacing : C[46] || CT.C46;
    let onPermissionSet = opts && 'onPermissionSet' in opts ? opts.onPermissionSet : null;
    let formatsAllowed = opts && 'formatsAllowed' in opts ? opts.formatsAllowed : C[47] || CT.C47;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onQRViewCreated$] = onQRViewCreated;
    this[overlay$] = overlay;
    this[overlayMargin$] = overlayMargin;
    this[cameraFacing$0] = cameraFacing;
    this[onPermissionSet$] = onPermissionSet;
    this[formatsAllowed$] = formatsAllowed;
    qr_code_scanner.QRView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = qr_code_scanner.QRView.prototype;
  dart.addTypeTests(qr_code_scanner.QRView);
  dart.addTypeCaches(qr_code_scanner.QRView);
  dart.setMethodSignature(qr_code_scanner.QRView, () => ({
    __proto__: dart.getMethods(qr_code_scanner.QRView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(qr_code_scanner.QRView, I[1]);
  dart.setFieldSignature(qr_code_scanner.QRView, () => ({
    __proto__: dart.getFields(qr_code_scanner.QRView.__proto__),
    onQRViewCreated: dart.finalFieldType(dart.fnType(dart.void, [qr_code_scanner.QRViewController])),
    overlay: dart.finalFieldType(dart.nullable(qr_scanner_overlay_shape.QrScannerOverlayShape)),
    overlayMargin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    cameraFacing: dart.finalFieldType(camera.CameraFacing),
    onPermissionSet: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [qr_code_scanner.QRViewController, core.bool]))),
    formatsAllowed: dart.finalFieldType(core.List$(barcode_format.BarcodeFormat))
  }));
  var ___QRViewState__channel = dart.privateName(qr_code_scanner, "_#_QRViewState#_channel");
  var ___QRViewState__observer = dart.privateName(qr_code_scanner, "_#_QRViewState#_observer");
  var _observer = dart.privateName(qr_code_scanner, "_observer");
  var _getPlatformQrViewWithOverlay = dart.privateName(qr_code_scanner, "_getPlatformQrViewWithOverlay");
  var _getPlatformQrView = dart.privateName(qr_code_scanner, "_getPlatformQrView");
  var _onPlatformViewCreated = dart.privateName(qr_code_scanner, "_onPlatformViewCreated");
  var _name$ = dart.privateName(platform, "_name");
  qr_code_scanner._QRViewState = class _QRViewState extends framework.State$(qr_code_scanner.QRView) {
    get [_channel$]() {
      let t4;
      t4 = this[___QRViewState__channel];
      return t4 == null ? dart.throw(new _internal.LateError.fieldNI("_channel")) : t4;
    }
    set [_channel$](t4) {
      this[___QRViewState__channel] = t4;
    }
    get [_observer]() {
      let t5;
      t5 = this[___QRViewState__observer];
      return t5 == null ? dart.throw(new _internal.LateError.fieldNI("_observer")) : t5;
    }
    set [_observer](t5) {
      this[___QRViewState__observer] = t5;
    }
    initState() {
      super.initState();
      this[_observer] = new lifecycle_event_handler.LifecycleEventHandler.new({resumeCallBack: dart.bind(this, 'updateDimensions')});
      dart.nullCheck(binding.WidgetsBinding.instance).addObserver(this[_observer]);
    }
    build(context) {
      return new (T.NotificationListenerOfNotification()).new({onNotification: dart.bind(this, 'onNotification'), child: new size_changed_layout_notifier.SizeChangedLayoutNotifier.new({child: this.widget.overlay != null ? this[_getPlatformQrViewWithOverlay]() : this[_getPlatformQrView](), $creationLocationd_0dea112b090073317d4: C[48] || CT.C48}), $creationLocationd_0dea112b090073317d4: C[51] || CT.C51});
    }
    dispose() {
      super.dispose();
      dart.nullCheck(binding.WidgetsBinding.instance).removeObserver(this[_observer]);
    }
    updateDimensions() {
      return async.async(dart.void, (function* updateDimensions() {
        yield qr_code_scanner.QRViewController.updateDimensions(T.GlobalKeyOfStateOfStatefulWidget().as(this.widget.key), this[_channel$], {overlay: this.widget.overlay});
      }).bind(this));
    }
    onNotification(notification) {
      this.updateDimensions();
      return false;
    }
    [_getPlatformQrViewWithOverlay]() {
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([this[_getPlatformQrView](), new container.Container.new({padding: this.widget.overlayMargin, decoration: new shape_decoration.ShapeDecoration.new({shape: dart.nullCheck(this.widget.overlay)}), $creationLocationd_0dea112b090073317d4: C[55] || CT.C55})]), $creationLocationd_0dea112b090073317d4: C[59] || CT.C59});
    }
    [_getPlatformQrView]() {
      let _platformQrView = null;
      if (true) {
        _platformQrView = flutter_qr_web.createWebQrView({onPlatformViewCreated: this.widget.onQRViewCreated, cameraFacing: this.widget.cameraFacing});
      } else {
        switch (platform.defaultTargetPlatform) {
          case C[68] || CT.C68:
          {
            _platformQrView = new platform_view.AndroidView.new({viewType: "net.touchcapture.qr.flutterqr/qrview", onPlatformViewCreated: dart.bind(this, _onPlatformViewCreated), creationParams: new qr_code_scanner._QrCameraSettings.new({cameraFacing: this.widget.cameraFacing}).toMap(), creationParamsCodec: new message_codecs.StandardMessageCodec.new(), $creationLocationd_0dea112b090073317d4: C[62] || CT.C62});
            break;
          }
          case C[75] || CT.C75:
          {
            _platformQrView = new platform_view.UiKitView.new({viewType: "net.touchcapture.qr.flutterqr/qrview", onPlatformViewCreated: dart.bind(this, _onPlatformViewCreated), creationParams: new qr_code_scanner._QrCameraSettings.new({cameraFacing: this.widget.cameraFacing}).toMap(), creationParamsCodec: new message_codecs.StandardMessageCodec.new(), $creationLocationd_0dea112b090073317d4: C[69] || CT.C69});
            break;
          }
          default:
          {
            dart.throw(new core.UnsupportedError.new("Trying to use the default qrview implementation for " + dart.str(platform.defaultTargetPlatform) + " but there isn't a default one"));
          }
        }
      }
      return _platformQrView;
    }
    [_onPlatformViewCreated](id) {
      let t6, t7, t6$;
      this[_channel$] = new platform_channel.MethodChannel.new("net.touchcapture.qr.flutterqr/qrview_" + dart.str(id));
      let controller = (t6 = new qr_code_scanner.QRViewController.__(this[_channel$], T.GlobalKeyNOfStateOfStatefulWidget().as(this.widget.key), this.widget.onPermissionSet, this.widget.cameraFacing), (() => {
        t6[_startScan$](T.GlobalKeyOfStateOfStatefulWidget().as(this.widget.key), this.widget.overlay, this.widget.formatsAllowed);
        return t6;
      })());
      t6$ = this.widget;
      t7 = controller;
      t6$.onQRViewCreated(t7);
    }
  };
  (qr_code_scanner._QRViewState.new = function() {
    this[___QRViewState__channel] = null;
    this[___QRViewState__observer] = null;
    qr_code_scanner._QRViewState.__proto__.new.call(this);
    ;
  }).prototype = qr_code_scanner._QRViewState.prototype;
  dart.addTypeTests(qr_code_scanner._QRViewState);
  dart.addTypeCaches(qr_code_scanner._QRViewState);
  dart.setMethodSignature(qr_code_scanner._QRViewState, () => ({
    __proto__: dart.getMethods(qr_code_scanner._QRViewState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    updateDimensions: dart.fnType(async.Future$(dart.void), []),
    onNotification: dart.fnType(core.bool, [dart.dynamic]),
    [_getPlatformQrViewWithOverlay]: dart.fnType(framework.Widget, []),
    [_getPlatformQrView]: dart.fnType(framework.Widget, []),
    [_onPlatformViewCreated]: dart.fnType(dart.void, [core.int])
  }));
  dart.setGetterSignature(qr_code_scanner._QRViewState, () => ({
    __proto__: dart.getGetters(qr_code_scanner._QRViewState.__proto__),
    [_channel$]: platform_channel.MethodChannel,
    [_observer]: lifecycle_event_handler.LifecycleEventHandler
  }));
  dart.setSetterSignature(qr_code_scanner._QRViewState, () => ({
    __proto__: dart.getSetters(qr_code_scanner._QRViewState.__proto__),
    [_channel$]: platform_channel.MethodChannel,
    [_observer]: lifecycle_event_handler.LifecycleEventHandler
  }));
  dart.setLibraryUri(qr_code_scanner._QRViewState, I[1]);
  dart.setFieldSignature(qr_code_scanner._QRViewState, () => ({
    __proto__: dart.getFields(qr_code_scanner._QRViewState.__proto__),
    [___QRViewState__channel]: dart.fieldType(dart.nullable(platform_channel.MethodChannel)),
    [___QRViewState__observer]: dart.fieldType(dart.nullable(lifecycle_event_handler.LifecycleEventHandler))
  }));
  qr_code_scanner._QrCameraSettings = class _QrCameraSettings extends core.Object {
    toMap() {
      return new (T.IdentityMapOfString$dynamic()).from(["cameraFacing", this.cameraFacing.index]);
    }
  };
  (qr_code_scanner._QrCameraSettings.new = function(opts) {
    let cameraFacing = opts && 'cameraFacing' in opts ? opts.cameraFacing : C[76] || CT.C76;
    this.cameraFacing = cameraFacing;
    ;
  }).prototype = qr_code_scanner._QrCameraSettings.prototype;
  dart.addTypeTests(qr_code_scanner._QrCameraSettings);
  dart.addTypeCaches(qr_code_scanner._QrCameraSettings);
  dart.setMethodSignature(qr_code_scanner._QrCameraSettings, () => ({
    __proto__: dart.getMethods(qr_code_scanner._QrCameraSettings.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(qr_code_scanner._QrCameraSettings, I[1]);
  dart.setFieldSignature(qr_code_scanner._QrCameraSettings, () => ({
    __proto__: dart.getFields(qr_code_scanner._QrCameraSettings.__proto__),
    cameraFacing: dart.finalFieldType(camera.CameraFacing)
  }));
  qr_code_scanner.QRViewController = class QRViewController extends core.Object {
    get scannedDataStream() {
      return this[_scanUpdateController$].stream;
    }
    get hasPermissions() {
      return this[_hasPermissions$];
    }
    [_startScan$](key, overlay, barcodeFormats) {
      return async.async(dart.void, (function* _startScan() {
        let t6, t6$;
        try {
          yield qr_code_scanner.QRViewController.updateDimensions(key, this[_channel$], {overlay: overlay});
          return yield this[_channel$].invokeMethod(dart.void, "startScan", (t6$ = (t6 = barcodeFormats, t6 == null ? null : t6[$map](core.int, dart.fn(e => barcode_format['BarcodeTypesExtension|asInt'](e), T.BarcodeFormatToint()))[$toList]()), t6$ == null ? [] : t6$));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getCameraInfo() {
      return async.async(camera.CameraFacing, (function* getCameraInfo() {
        try {
          let cameraFacing = core.int.as(yield this[_channel$].invokeMethod(dart.dynamic, "getCameraInfo"));
          if (cameraFacing === -1) return this[_cameraFacing$];
          return camera.CameraFacing.values[$_get](core.int.as(yield this[_channel$].invokeMethod(dart.dynamic, "getCameraInfo")));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    flipCamera() {
      return async.async(camera.CameraFacing, (function* flipCamera() {
        try {
          return camera.CameraFacing.values[$_get](core.int.as(yield this[_channel$].invokeMethod(dart.dynamic, "flipCamera")));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getFlashStatus() {
      return async.async(T.boolN(), (function* getFlashStatus() {
        try {
          return yield this[_channel$].invokeMethod(core.bool, "getFlashInfo");
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    toggleFlash() {
      return async.async(dart.void, (function* toggleFlash() {
        try {
          T.boolN().as(yield this[_channel$].invokeMethod(dart.dynamic, "toggleFlash"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    pauseCamera() {
      return async.async(dart.void, (function* pauseCamera() {
        try {
          yield this[_channel$].invokeMethod(dart.dynamic, "pauseCamera");
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    stopCamera() {
      return async.async(dart.void, (function* stopCamera() {
        try {
          yield this[_channel$].invokeMethod(dart.dynamic, "stopCamera");
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    resumeCamera() {
      return async.async(dart.void, (function* resumeCamera() {
        try {
          yield this[_channel$].invokeMethod(dart.dynamic, "resumeCamera");
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getSystemFeatures() {
      return async.async(features$.SystemFeatures, (function* getSystemFeatures() {
        try {
          let features = (yield this[_channel$].invokeMapMethod(core.String, dart.dynamic, "getSystemFeatures"));
          if (features != null) {
            return features$.SystemFeatures.fromJson(features);
          }
          dart.throw(new camera_exception.CameraException.new("Error", "Could not get system features"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    dispose() {
      if (platform.defaultTargetPlatform === platform.TargetPlatform.iOS) this.stopCamera();
      this[_scanUpdateController$].close();
    }
    static updateDimensions(key, channel, opts) {
      let overlay = opts && 'overlay' in opts ? opts.overlay : null;
      return async.async(core.bool, function* updateDimensions() {
        let t15, t15$, t15$0, t15$1;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.iOS) {
          yield async.Future.delayed(new core.Duration.new({milliseconds: 300}));
          if (key.currentContext == null) return false;
          let renderBox = box.RenderBox.as(dart.nullCheck(key.currentContext).findRenderObject());
          try {
            yield channel.invokeMethod(dart.dynamic, "setDimensions", new (T.IdentityMapOfString$double()).from(["width", renderBox.size.width, "height", renderBox.size.height, "scanArea", (t15$ = (t15 = overlay, t15 == null ? null : t15.cutOutSize), t15$ == null ? 0.0 : t15$), "scanAreaOffset", (t15$1 = (t15$0 = overlay, t15$0 == null ? null : t15$0.cutOutBottomOffset), t15$1 == null ? 0.0 : t15$1)]));
            return true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (message_codec.PlatformException.is(e)) {
              dart.throw(new camera_exception.CameraException.new(e.code, e.message));
            } else
              throw e$;
          }
        }
        return false;
      });
    }
  };
  (qr_code_scanner.QRViewController.__ = function(channel, qrKey, onPermissionSet, cameraFacing) {
    this[_scanUpdateController$] = T.StreamControllerOfBarcode().new();
    this[_hasPermissions$] = false;
    this[_channel$] = channel;
    this[_cameraFacing$] = cameraFacing;
    this[_channel$].setMethodCallHandler(dart.fn(call => async.async(core.Null, (function*() {
      switch (call.method) {
        case "onRecognizeQR":
        {
          if (call.arguments != null) {
            let args = core.Map.as(call.arguments);
            let code = core.String.as(args[$_get]("code"));
            let rawType = core.String.as(args[$_get]("type"));
            let rawBytes = T.ListNOfint().as(args[$_get]("rawBytes"));
            let format = barcode_format['BarcodeTypesExtension|fromString'](rawType);
            if (format !== barcode_format.BarcodeFormat.unknown) {
              let barcode = new barcode$.Barcode.new(code, format, rawBytes);
              this[_scanUpdateController$].sink.add(barcode);
            } else {
              dart.throw(core.Exception.new("Unexpected barcode type " + rawType));
            }
          }
          break;
        }
        case "onPermissionSet":
        {
          if (call.arguments != null && typeof call.arguments == 'boolean') {
            this[_hasPermissions$] = core.bool.as(call.arguments);
            if (onPermissionSet != null) {
              onPermissionSet(this, this[_hasPermissions$]);
            }
          }
          break;
        }
      }
    }).bind(this)), T.MethodCallToFutureOfNull()));
  }).prototype = qr_code_scanner.QRViewController.prototype;
  dart.addTypeTests(qr_code_scanner.QRViewController);
  dart.addTypeCaches(qr_code_scanner.QRViewController);
  dart.setMethodSignature(qr_code_scanner.QRViewController, () => ({
    __proto__: dart.getMethods(qr_code_scanner.QRViewController.__proto__),
    [_startScan$]: dart.fnType(async.Future$(dart.void), [framework.GlobalKey$(framework.State$(framework.StatefulWidget)), dart.nullable(qr_scanner_overlay_shape.QrScannerOverlayShape), dart.nullable(core.List$(barcode_format.BarcodeFormat))]),
    getCameraInfo: dart.fnType(async.Future$(camera.CameraFacing), []),
    flipCamera: dart.fnType(async.Future$(camera.CameraFacing), []),
    getFlashStatus: dart.fnType(async.Future$(dart.nullable(core.bool)), []),
    toggleFlash: dart.fnType(async.Future$(dart.void), []),
    pauseCamera: dart.fnType(async.Future$(dart.void), []),
    stopCamera: dart.fnType(async.Future$(dart.void), []),
    resumeCamera: dart.fnType(async.Future$(dart.void), []),
    getSystemFeatures: dart.fnType(async.Future$(features$.SystemFeatures), []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(qr_code_scanner.QRViewController, () => ({
    __proto__: dart.getGetters(qr_code_scanner.QRViewController.__proto__),
    scannedDataStream: async.Stream$(barcode$.Barcode),
    hasPermissions: core.bool
  }));
  dart.setLibraryUri(qr_code_scanner.QRViewController, I[1]);
  dart.setFieldSignature(qr_code_scanner.QRViewController, () => ({
    __proto__: dart.getFields(qr_code_scanner.QRViewController.__proto__),
    [_channel$]: dart.finalFieldType(platform_channel.MethodChannel),
    [_cameraFacing$]: dart.finalFieldType(camera.CameraFacing),
    [_scanUpdateController$]: dart.finalFieldType(async.StreamController$(barcode$.Barcode)),
    [_hasPermissions$]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/qr_code_scanner/src/web/flutter_qr_web.dart", {
    "package:qr_code_scanner/src/web/flutter_qr_web.dart": flutter_qr_web,
    "package:qr_code_scanner/src/qr_code_scanner.dart": qr_code_scanner,
    "package:qr_code_scanner/qr_code_scanner.dart": qr_code_scanner$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["flutter_qr_web.dart","../qr_code_scanner.dart"],"names":[],"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","file":"../../../../../../../../packages/qr_code_scanner/src/web/flutter_qr_web.dart.lib.js"}');
  // Exports:
  return {
    src__web__flutter_qr_web: flutter_qr_web,
    src__qr_code_scanner: qr_code_scanner,
    qr_code_scanner: qr_code_scanner$
  };
}));

//# sourceMappingURL=flutter_qr_web.dart.lib.js.map
