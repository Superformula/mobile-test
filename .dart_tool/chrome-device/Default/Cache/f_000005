define(['dart_sdk', 'packages/cloud_firestore_web/src/internals.dart', 'packages/cloud_firestore_platform_interface/src/platform_interface/utils/load_bundle_task_state.dart', 'packages/cloud_firestore_web/src/interop/utils/utils.dart', 'packages/cloud_firestore_platform_interface/src/set_options.dart', 'packages/cloud_firestore_web/src/field_value_web.dart', 'packages/cloud_firestore_platform_interface/src/get_options.dart', 'packages/cloud_firestore_platform_interface/src/source.dart', 'packages/cloud_firestore_platform_interface/src/internal/pointer.dart', 'packages/cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart', 'packages/cloud_firestore_platform_interface/src/field_path.dart', 'packages/cloud_firestore_platform_interface/src/timestamp.dart', 'packages/cloud_firestore_platform_interface/src/geo_point.dart', 'packages/cloud_firestore_platform_interface/src/blob.dart', 'packages/cloud_firestore_platform_interface/src/snapshot_metadata.dart', 'packages/firebase_core_web/src/interop/core.dart', 'packages/cloud_firestore_web/src/load_bundle_task_web.dart'], (function load__packages__cloud_firestore_web__src__write_batch_web_dart(dart_sdk, packages__cloud_firestore_web__src__internals$46dart, packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart, packages__cloud_firestore_web__src__interop__utils__utils$46dart, packages__cloud_firestore_platform_interface__src__set_options$46dart, packages__cloud_firestore_web__src__field_value_web$46dart, packages__cloud_firestore_platform_interface__src__get_options$46dart, packages__cloud_firestore_platform_interface__src__source$46dart, packages__cloud_firestore_platform_interface__src__internal__pointer$46dart, packages__cloud_firestore_platform_interface__src__platform_interface__platform_interface_field_value$46dart, packages__cloud_firestore_platform_interface__src__field_path$46dart, packages__cloud_firestore_platform_interface__src__timestamp$46dart, packages__cloud_firestore_platform_interface__src__geo_point$46dart, packages__cloud_firestore_platform_interface__src__blob$46dart, packages__cloud_firestore_platform_interface__src__snapshot_metadata$46dart, packages__firebase_core_web__src__interop__core$46dart, packages__cloud_firestore_web__src__load_bundle_task_web$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const internals = packages__cloud_firestore_web__src__internals$46dart.src__internals;
  const platform_interface_write_batch = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_write_batch;
  const platform_interface_document_snapshot = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_document_snapshot;
  const platform_interface_transaction = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_transaction;
  const platform_interface_firestore = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_firestore;
  const platform_interface_field_value_factory = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_field_value_factory;
  const platform_interface_query_snapshot = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_query_snapshot;
  const platform_interface_query = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_query;
  const platform_interface_collection_reference = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_collection_reference;
  const platform_interface_document_reference = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_document_reference;
  const platform_interface_document_change = packages__cloud_firestore_platform_interface__src__platform_interface__utils__load_bundle_task_state$46dart.src__platform_interface__platform_interface_document_change;
  const firestore = packages__cloud_firestore_web__src__interop__utils__utils$46dart.src__interop__firestore;
  const set_options = packages__cloud_firestore_platform_interface__src__set_options$46dart.src__set_options;
  const field_value_web = packages__cloud_firestore_web__src__field_value_web$46dart.src__field_value_web;
  const get_options = packages__cloud_firestore_platform_interface__src__get_options$46dart.src__get_options;
  const source = packages__cloud_firestore_platform_interface__src__source$46dart.src__source;
  const pointer = packages__cloud_firestore_platform_interface__src__internal__pointer$46dart.src__internal__pointer;
  const platform_interface_field_value = packages__cloud_firestore_platform_interface__src__platform_interface__platform_interface_field_value$46dart.src__platform_interface__platform_interface_field_value;
  const field_path = packages__cloud_firestore_platform_interface__src__field_path$46dart.src__field_path;
  const timestamp = packages__cloud_firestore_platform_interface__src__timestamp$46dart.src__timestamp;
  const geo_point = packages__cloud_firestore_platform_interface__src__geo_point$46dart.src__geo_point;
  const blob = packages__cloud_firestore_platform_interface__src__blob$46dart.src__blob;
  const snapshot_metadata = packages__cloud_firestore_platform_interface__src__snapshot_metadata$46dart.src__snapshot_metadata;
  const core$ = packages__firebase_core_web__src__interop__core$46dart.src__interop__core;
  const load_bundle_task_web = packages__cloud_firestore_web__src__load_bundle_task_web$46dart.src__load_bundle_task_web;
  var write_batch_web = Object.create(dart.library);
  var transaction_web = Object.create(dart.library);
  var field_value_factory_web = Object.create(dart.library);
  var query_web = Object.create(dart.library);
  var collection_reference_web = Object.create(dart.library);
  var document_reference_web = Object.create(dart.library);
  var codec_utility = Object.create(dart.library);
  var web_utils = Object.create(dart.library);
  var cloud_firestore_web = Object.create(dart.library);
  var $addAll = dartx.addAll;
  var $_get = dartx._get;
  var $noSuchMethod = dartx.noSuchMethod;
  var $updateAll = dartx.updateAll;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $length = dartx.length;
  var $toLowerCase = dartx.toLowerCase;
  var $join = dartx.join;
  dart._checkModuleNullSafetyMode(true);
  var T$ = {
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    FutureOfDocumentSnapshotPlatform: () => (T$.FutureOfDocumentSnapshotPlatform = dart.constFn(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    VoidToFutureOfDocumentSnapshotPlatform: () => (T$.VoidToFutureOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshotPlatform(), [])))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    FutureOfQuerySnapshotPlatform: () => (T$.FutureOfQuerySnapshotPlatform = dart.constFn(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    VoidToFutureOfQuerySnapshotPlatform: () => (T$.VoidToFutureOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfQuerySnapshotPlatform(), [])))(),
    StreamOfQuerySnapshotPlatform: () => (T$.StreamOfQuerySnapshotPlatform = dart.constFn(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    QuerySnapshotToQuerySnapshotPlatform: () => (T$.QuerySnapshotToQuerySnapshotPlatform = dart.constFn(dart.fnType(platform_interface_query_snapshot.QuerySnapshotPlatform, [firestore.QuerySnapshot])))(),
    VoidToStreamOfQuerySnapshotPlatform: () => (T$.VoidToStreamOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfQuerySnapshotPlatform(), [])))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    VoidToFutureOfNull: () => (T$.VoidToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [])))(),
    FutureOrOfDocumentSnapshot: () => (T$.FutureOrOfDocumentSnapshot = dart.constFn(async.FutureOr$(firestore.DocumentSnapshot)))(),
    FutureOfDocumentSnapshot: () => (T$.FutureOfDocumentSnapshot = dart.constFn(async.Future$(firestore.DocumentSnapshot)))(),
    VoidToFutureOfDocumentSnapshot: () => (T$.VoidToFutureOfDocumentSnapshot = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshot(), [])))(),
    StreamOfDocumentSnapshotPlatform: () => (T$.StreamOfDocumentSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    DocumentSnapshotToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [firestore.DocumentSnapshot])))(),
    VoidToStreamOfDocumentSnapshotPlatform: () => (T$.VoidToStreamOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfDocumentSnapshotPlatform(), [])))(),
    StringAnddynamicTodynamic: () => (T$.StringAnddynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, dart.dynamic])))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    DocumentSnapshotN: () => (T$.DocumentSnapshotN = dart.constFn(dart.nullable(firestore.DocumentSnapshot)))(),
    DocumentSnapshotNToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotNToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [T$.DocumentSnapshotN()])))(),
    DocumentChangeToDocumentChangePlatform: () => (T$.DocumentChangeToDocumentChangePlatform = dart.constFn(dart.fnType(platform_interface_document_change.DocumentChangePlatform, [firestore.DocumentChange])))(),
    IdentityMapOfString$bool: () => (T$.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))(),
    FieldPathToString: () => (T$.FieldPathToString = dart.constFn(dart.fnType(core.String, [field_path.FieldPath])))(),
    TransactionN: () => (T$.TransactionN = dart.constFn(dart.nullable(firestore.Transaction)))(),
    VoidToFuture: () => (T$.VoidToFuture = dart.constFn(dart.fnType(async.Future, [])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: source.Source.prototype,
        [_name]: "Source.serverAndCache",
        index: 0
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: get_options.GetOptions.prototype,
        [GetOptions_source]: C[1] || CT.C1
      });
    },
    get C2() {
      return C[2] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', _pointer));
    },
    get C3() {
      return C[3] = dart.fn(codec_utility.CodecUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C4() {
      return C[4] = dart.fn(codec_utility.CodecUtility.valueDecode, T$.dynamicTodynamic());
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: source.Source.prototype,
        [_name]: "Source.cache",
        index: 2
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: source.Source.prototype,
        [_name]: "Source.server",
        index: 1
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 30000000
      });
    }
  }, false);
  var C = Array(8).fill(void 0);
  var I = [
    "package:cloud_firestore_web/src/write_batch_web.dart",
    "package:cloud_firestore_web/src/transaction_web.dart",
    "package:cloud_firestore_web/src/field_value_factory_web.dart",
    "package:cloud_firestore_web/src/query_web.dart",
    "package:cloud_firestore_web/src/collection_reference_web.dart",
    "package:cloud_firestore_web/src/document_reference_web.dart",
    "package:cloud_firestore_web/src/utils/codec_utility.dart",
    "package:cloud_firestore_web/cloud_firestore_web.dart"
  ];
  var _webFirestoreDelegate$ = dart.privateName(write_batch_web, "_webFirestoreDelegate");
  var _webWriteBatchDelegate = dart.privateName(write_batch_web, "_webWriteBatchDelegate");
  write_batch_web.WriteBatchWeb = class WriteBatchWeb extends platform_interface_write_batch.WriteBatchPlatform {
    commit() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webWriteBatchDelegate], 'commit'));
    }
    delete(documentPath) {
      this[_webWriteBatchDelegate].delete(this[_webFirestoreDelegate$].doc(documentPath));
    }
    set(documentPath, data, options = null) {
      this[_webWriteBatchDelegate].set(this[_webFirestoreDelegate$].doc(documentPath), dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
    }
    update(documentPath, data) {
      this[_webWriteBatchDelegate].update(this[_webFirestoreDelegate$].doc(documentPath), dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data)));
    }
  };
  (write_batch_web.WriteBatchWeb.new = function(_webFirestoreDelegate) {
    this[_webFirestoreDelegate$] = _webFirestoreDelegate;
    this[_webWriteBatchDelegate] = dart.nullCheck(_webFirestoreDelegate.batch());
    write_batch_web.WriteBatchWeb.__proto__.new.call(this);
    ;
  }).prototype = write_batch_web.WriteBatchWeb.prototype;
  dart.addTypeTests(write_batch_web.WriteBatchWeb);
  dart.addTypeCaches(write_batch_web.WriteBatchWeb);
  dart.setLibraryUri(write_batch_web.WriteBatchWeb, I[0]);
  dart.setFieldSignature(write_batch_web.WriteBatchWeb, () => ({
    __proto__: dart.getFields(write_batch_web.WriteBatchWeb.__proto__),
    [_webFirestoreDelegate$]: dart.finalFieldType(firestore.Firestore),
    [_webWriteBatchDelegate]: dart.fieldType(firestore.WriteBatch)
  }));
  var _firestore$ = dart.privateName(transaction_web, "_firestore");
  var _webFirestoreDelegate$0 = dart.privateName(transaction_web, "_webFirestoreDelegate");
  var _webTransactionDelegate$ = dart.privateName(transaction_web, "_webTransactionDelegate");
  transaction_web.TransactionWeb = class TransactionWeb extends platform_interface_transaction.TransactionPlatform {
    delete(documentPath) {
      this[_webTransactionDelegate$].delete(this[_webFirestoreDelegate$0].doc(documentPath));
      return this;
    }
    get(documentPath) {
      return internals.guard(T$.FutureOfDocumentSnapshotPlatform(), dart.fn(() => async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function*() {
        let webDocumentSnapshot = (yield this[_webTransactionDelegate$].get(this[_webFirestoreDelegate$0].doc(documentPath)));
        return web_utils.convertWebDocumentSnapshot(this[_firestore$], webDocumentSnapshot);
      }).bind(this)), T$.VoidToFutureOfDocumentSnapshotPlatform()));
    }
    set(documentPath, data, options = null) {
      this[_webTransactionDelegate$].set(this[_webFirestoreDelegate$0].doc(documentPath), dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
      return this;
    }
    update(documentPath, data) {
      this[_webTransactionDelegate$].update(this[_webFirestoreDelegate$0].doc(documentPath), dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data)));
      return this;
    }
  };
  (transaction_web.TransactionWeb.new = function(_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
    this[_firestore$] = _firestore;
    this[_webFirestoreDelegate$0] = _webFirestoreDelegate;
    this[_webTransactionDelegate$] = _webTransactionDelegate;
    transaction_web.TransactionWeb.__proto__.new.call(this);
    ;
  }).prototype = transaction_web.TransactionWeb.prototype;
  dart.addTypeTests(transaction_web.TransactionWeb);
  dart.addTypeCaches(transaction_web.TransactionWeb);
  dart.setMethodSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getMethods(transaction_web.TransactionWeb.__proto__),
    delete: dart.fnType(transaction_web.TransactionWeb, [core.String]),
    set: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(transaction_web.TransactionWeb, I[1]);
  dart.setFieldSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getFields(transaction_web.TransactionWeb.__proto__),
    [_webFirestoreDelegate$0]: dart.finalFieldType(firestore.Firestore),
    [_webTransactionDelegate$]: dart.finalFieldType(firestore.Transaction),
    [_firestore$]: dart.fieldType(platform_interface_firestore.FirebaseFirestorePlatform)
  }));
  field_value_factory_web.FieldValueFactoryWeb = class FieldValueFactoryWeb extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.arrayRemove(T$.ListN().as(codec_utility.CodecUtility.valueEncode(elements))));
    }
    arrayUnion(elements) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.arrayUnion(T$.ListN().as(codec_utility.CodecUtility.valueEncode(elements))));
    }
    delete() {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.delete());
    }
    increment(value) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.increment(value));
    }
    serverTimestamp() {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.serverTimestamp());
    }
  };
  (field_value_factory_web.FieldValueFactoryWeb.new = function() {
    field_value_factory_web.FieldValueFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = field_value_factory_web.FieldValueFactoryWeb.prototype;
  dart.addTypeTests(field_value_factory_web.FieldValueFactoryWeb);
  dart.addTypeCaches(field_value_factory_web.FieldValueFactoryWeb);
  dart.setMethodSignature(field_value_factory_web.FieldValueFactoryWeb, () => ({
    __proto__: dart.getMethods(field_value_factory_web.FieldValueFactoryWeb.__proto__),
    arrayRemove: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    arrayUnion: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    delete: dart.fnType(field_value_web.FieldValueWeb, []),
    increment: dart.fnType(field_value_web.FieldValueWeb, [core.num]),
    serverTimestamp: dart.fnType(field_value_web.FieldValueWeb, [])
  }));
  dart.setLibraryUri(field_value_factory_web.FieldValueFactoryWeb, I[2]);
  var isCollectionGroupQuery$ = dart.privateName(query_web, "QueryWeb.isCollectionGroupQuery");
  var _firestore$0 = dart.privateName(query_web, "_firestore");
  var _path$ = dart.privateName(query_web, "_path");
  var _webQuery$ = dart.privateName(query_web, "_webQuery");
  var _copyWithParameters = dart.privateName(query_web, "_copyWithParameters");
  var _buildWebQueryWithParameters = dart.privateName(query_web, "_buildWebQueryWithParameters");
  var _name = dart.privateName(source, "_name");
  var GetOptions_source = dart.privateName(get_options, "GetOptions.source");
  query_web.QueryWeb = class QueryWeb extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[isCollectionGroupQuery$];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    [_copyWithParameters](parameters) {
      let t0;
      return new query_web.QueryWeb.new(this[_firestore$0], this[_path$], this[_webQuery$], {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t0 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t0[$addAll](parameters);
          return t0;
        })()))});
    }
    [_buildWebQueryWithParameters]() {
      let query = this[_webQuery$];
      for (let t0 of core.Iterable.as(this.parameters[$_get]("orderBy"))) {
        let order = core.List.as(t0);
        query = query.orderBy(codec_utility.CodecUtility.valueEncode(order[$_get](0)), dart.dtest(order[$_get](1)) ? "desc" : "asc");
      }
      if (this.parameters[$_get]("startAt") != null) {
        query = query.startAt({fieldValues: T$.ListN().as(codec_utility.CodecUtility.valueEncode(this.parameters[$_get]("startAt")))});
      }
      if (this.parameters[$_get]("startAfter") != null) {
        query = query.startAfter({fieldValues: T$.ListN().as(codec_utility.CodecUtility.valueEncode(this.parameters[$_get]("startAfter")))});
      }
      if (this.parameters[$_get]("endAt") != null) {
        query = query.endAt({fieldValues: T$.ListN().as(codec_utility.CodecUtility.valueEncode(this.parameters[$_get]("endAt")))});
      }
      if (this.parameters[$_get]("endBefore") != null) {
        query = query.endBefore({fieldValues: T$.ListN().as(codec_utility.CodecUtility.valueEncode(this.parameters[$_get]("endBefore")))});
      }
      if (this.parameters[$_get]("limit") != null) {
        query = query.limit(core.num.as(this.parameters[$_get]("limit")));
      }
      if (this.parameters[$_get]("limitToLast") != null) {
        query = query.limitToLast(core.num.as(this.parameters[$_get]("limitToLast")));
      }
      for (let t1 of core.Iterable.as(this.parameters[$_get]("where"))) {
        let condition = core.List.as(t1);
        let fieldPath = codec_utility.CodecUtility.valueEncode(condition[$_get](0));
        let opStr = core.String.as(condition[$_get](1));
        let value = codec_utility.CodecUtility.valueEncode(condition[$_get](2));
        query = query.where(fieldPath, opStr, value);
      }
      return query;
    }
    endAtDocument(orders, values) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[0] || CT.C0) {
      return internals.guard(T$.FutureOfQuerySnapshotPlatform(), dart.fn(() => async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function*() {
        return web_utils.convertWebQuerySnapshot(this.firestore, yield this[_buildWebQueryWithParameters]().get(web_utils.convertGetOptions(options)));
      }).bind(this)), T$.VoidToFutureOfQuerySnapshotPlatform()));
    }
    limit(limit) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = null;
      if (includeMetadataChanges) {
        querySnapshots = this[_buildWebQueryWithParameters]().onSnapshotMetadata;
      } else {
        querySnapshots = this[_buildWebQueryWithParameters]().onSnapshot;
      }
      return internals.guard(T$.StreamOfQuerySnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_query_snapshot.QuerySnapshotPlatform, dart.fn(webQuerySnapshot => web_utils.convertWebQuerySnapshot(this.firestore, webQuerySnapshot), T$.QuerySnapshotToQuerySnapshotPlatform())), T$.VoidToStreamOfQuerySnapshotPlatform()));
    }
    orderBy(orders) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[_copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
  };
  (query_web.QueryWeb.new = function(_firestore, _path, _webQuery, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[_firestore$0] = _firestore;
    this[_path$] = _path;
    this[_webQuery$] = _webQuery;
    this[isCollectionGroupQuery$] = isCollectionGroupQuery;
    query_web.QueryWeb.__proto__.new.call(this, _firestore, parameters);
    ;
  }).prototype = query_web.QueryWeb.prototype;
  dart.addTypeTests(query_web.QueryWeb);
  dart.addTypeCaches(query_web.QueryWeb);
  dart.setMethodSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getMethods(query_web.QueryWeb.__proto__),
    [_copyWithParameters]: dart.fnType(query_web.QueryWeb, [core.Map$(core.String, dart.dynamic)]),
    [_buildWebQueryWithParameters]: dart.fnType(firestore.Query$(dart.lazyJSType(() => dart.global.firebase.firestore.Query, "firebase.firestore.Query")), [])
  }));
  dart.setLibraryUri(query_web.QueryWeb, I[3]);
  dart.setFieldSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getFields(query_web.QueryWeb.__proto__),
    [_webQuery$]: dart.finalFieldType(firestore.Query$(dart.lazyJSType(() => dart.global.firebase.firestore.Query, "firebase.firestore.Query"))),
    [_firestore$0]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [_path$]: dart.finalFieldType(core.String),
    isCollectionGroupQuery: dart.finalFieldType(core.bool)
  }));
  var _firestorePlatform$ = dart.privateName(collection_reference_web, "_firestorePlatform");
  var _webFirestore$ = dart.privateName(collection_reference_web, "_webFirestore");
  var _delegate = dart.privateName(collection_reference_web, "_delegate");
  var _pointer = dart.privateName(collection_reference_web, "_pointer");
  var _pointer$ = dart.privateName(platform_interface_collection_reference, "_pointer");
  collection_reference_web.CollectionReferenceWeb = class CollectionReferenceWeb extends query_web.QueryWeb {
    get path() {
      return this[_delegate].path;
    }
    doc(path = null) {
      let documentReference = this[_delegate].doc(path);
      return new document_reference_web.DocumentReferenceWeb.new(this[_firestorePlatform$], this[_webFirestore$], documentReference.path);
    }
    get id() {
      return this[_delegate].id;
    }
    get parent() {
      let documentReference = this[_delegate].parent;
      if (documentReference == null) {
        return null;
      }
      return new document_reference_web.DocumentReferenceWeb.new(this[_firestorePlatform$], this[_webFirestore$], documentReference.path);
    }
    get [_pointer$]() {
      return pointer.Pointer.as(this[$noSuchMethod](new core._Invocation.getter(C[2] || CT.C2)));
    }
  };
  (collection_reference_web.CollectionReferenceWeb.new = function(_firestorePlatform, _webFirestore, path) {
    this[_firestorePlatform$] = _firestorePlatform;
    this[_webFirestore$] = _webFirestore;
    this[_delegate] = _webFirestore.collection(path);
    collection_reference_web.CollectionReferenceWeb.__proto__.new.call(this, _firestorePlatform, path, _webFirestore.collection(path));
    ;
  }).prototype = collection_reference_web.CollectionReferenceWeb.prototype;
  dart.addTypeTests(collection_reference_web.CollectionReferenceWeb);
  dart.addTypeCaches(collection_reference_web.CollectionReferenceWeb);
  collection_reference_web.CollectionReferenceWeb[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getMethods(collection_reference_web.CollectionReferenceWeb.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getGetters(collection_reference_web.CollectionReferenceWeb.__proto__),
    path: core.String,
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [_pointer$]: pointer.Pointer
  }));
  dart.setLibraryUri(collection_reference_web.CollectionReferenceWeb, I[4]);
  dart.setFieldSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getFields(collection_reference_web.CollectionReferenceWeb.__proto__),
    [_webFirestore$]: dart.finalFieldType(firestore.Firestore),
    [_firestorePlatform$]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [_delegate]: dart.finalFieldType(firestore.CollectionReference$(dart.lazyJSType(() => dart.global.firebase.firestore.CollectionReference, "firebase.firestore.CollectionReference")))
  }));
  var firestoreWeb$ = dart.privateName(document_reference_web, "DocumentReferenceWeb.firestoreWeb");
  var _delegate$ = dart.privateName(document_reference_web, "_delegate");
  document_reference_web.DocumentReferenceWeb = class DocumentReferenceWeb extends platform_interface_document_reference.DocumentReferencePlatform {
    get firestoreWeb() {
      return this[firestoreWeb$];
    }
    set firestoreWeb(value) {
      super.firestoreWeb = value;
    }
    set(data, options = null) {
      return internals.guard(T$.FutureOfvoid(), dart.fn(() => this[_delegate$].set(dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data)), web_utils.convertSetOptions(options)), T$.VoidToFutureOfNull()));
    }
    update(data) {
      return internals.guard(T$.FutureOfvoid(), dart.fn(() => this[_delegate$].update(dart.nullCheck(codec_utility.CodecUtility.encodeMapData(data))), T$.VoidToFutureOfNull()));
    }
    get(options = C[0] || CT.C0) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        let documentSnapshot = (yield internals.guard(T$.FutureOrOfDocumentSnapshot(), dart.fn(() => this[_delegate$].get(web_utils.convertGetOptions(options)), T$.VoidToFutureOfDocumentSnapshot())));
        return web_utils.convertWebDocumentSnapshot(this.firestore, documentSnapshot);
      }).bind(this));
    }
    delete() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_delegate$], 'delete'));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = this[_delegate$].onSnapshot;
      if (includeMetadataChanges) {
        querySnapshots = this[_delegate$].onMetadataChangesSnapshot;
      }
      return internals.guard(T$.StreamOfDocumentSnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webSnapshot => web_utils.convertWebDocumentSnapshot(this.firestore, webSnapshot), T$.DocumentSnapshotToDocumentSnapshotPlatform())), T$.VoidToStreamOfDocumentSnapshotPlatform()));
    }
  };
  (document_reference_web.DocumentReferenceWeb.new = function(firestore, firestoreWeb, path) {
    this[firestoreWeb$] = firestoreWeb;
    this[_delegate$] = firestoreWeb.doc(path);
    document_reference_web.DocumentReferenceWeb.__proto__.new.call(this, firestore, path);
    ;
  }).prototype = document_reference_web.DocumentReferenceWeb.prototype;
  dart.addTypeTests(document_reference_web.DocumentReferenceWeb);
  dart.addTypeCaches(document_reference_web.DocumentReferenceWeb);
  dart.setLibraryUri(document_reference_web.DocumentReferenceWeb, I[5]);
  dart.setFieldSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getFields(document_reference_web.DocumentReferenceWeb.__proto__),
    firestoreWeb: dart.finalFieldType(firestore.Firestore),
    [_delegate$]: dart.finalFieldType(firestore.DocumentReference)
  }));
  codec_utility.CodecUtility = class CodecUtility extends core.Object {
    static encodeMapData(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[$updateAll](dart.fn((key, value) => codec_utility.CodecUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static encodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[$map](dart.dynamic, C[3] || CT.C3)[$toList]();
    }
    static valueEncode(value) {
      if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = field_value_web.FieldValueWeb.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        return delegate.data;
      } else if (field_path.FieldPath.is(value)) {
        let components = value.components;
        let length = components[$length];
        switch (length) {
          case 1:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0));
          }
          case 2:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1));
          }
          case 3:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2));
          }
          case 4:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3));
          }
          case 5:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4));
          }
          case 6:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4), components[$_get](5));
          }
          case 7:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4), components[$_get](5), components[$_get](6));
          }
          case 8:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4), components[$_get](5), components[$_get](6), components[$_get](7));
          }
          case 9:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4), components[$_get](5), components[$_get](6), components[$_get](7), components[$_get](8));
          }
          case 10:
          {
            return new dart.global.firebase.firestore.FieldPath(components[$_get](0), components[$_get](1), components[$_get](2), components[$_get](3), components[$_get](4), components[$_get](5), components[$_get](6), components[$_get](7), components[$_get](8), components[$_get](9));
          }
          default:
          {
            dart.throw(core.Exception.new("Firestore web FieldPath only supports 10 levels deep field paths"));
          }
        }
      } else if (dart.equals(value, field_path.FieldPath.documentId)) {
        return dart.global.firebase.firestore.FieldPath.documentId();
      } else if (timestamp.Timestamp.is(value)) {
        return value.toDate();
      } else if (geo_point.GeoPoint.is(value)) {
        return new dart.global.firebase.firestore.GeoPoint(value.latitude, value.longitude);
      } else if (blob.Blob.is(value)) {
        return dart.global.firebase.firestore.Blob.fromUint8Array(value.bytes);
      } else if (document_reference_web.DocumentReferenceWeb.is(value)) {
        return value.firestoreWeb.doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return codec_utility.CodecUtility.encodeMapData(value);
      } else if (core.List.is(value)) {
        return codec_utility.CodecUtility.encodeArrayData(value);
      }
      return value;
    }
    static decodeMapData(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[$updateAll](dart.fn((key, value) => codec_utility.CodecUtility.valueDecode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static decodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[$map](dart.dynamic, C[4] || CT.C4)[$toList]();
    }
    static valueDecode(value) {
      if (dart.lazyJSType(() => dart.global.firebase.firestore.GeoPoint, "firebase.firestore.GeoPoint").is(value)) {
        return new geo_point.GeoPoint.new(value.latitude, value.longitude);
      } else if (core.DateTime.is(value)) {
        return timestamp.Timestamp.fromDate(value);
      } else if (dart.anonymousJSType("Blob").is(value)) {
        return new blob.Blob.new(value.toUint8Array());
      } else if (firestore.DocumentReference.is(value)) {
        return cloud_firestore_web.FirebaseFirestoreWeb.as(platform_interface_firestore.FirebaseFirestorePlatform.instance).doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return codec_utility.CodecUtility.decodeMapData(value);
      } else if (core.List.is(value)) {
        return codec_utility.CodecUtility.decodeArrayData(value);
      }
      return value;
    }
  };
  (codec_utility.CodecUtility.new = function() {
    ;
  }).prototype = codec_utility.CodecUtility.prototype;
  dart.addTypeTests(codec_utility.CodecUtility);
  dart.addTypeCaches(codec_utility.CodecUtility);
  dart.setLibraryUri(codec_utility.CodecUtility, I[6]);
  web_utils.convertWebQuerySnapshot = function convertWebQuerySnapshot(firestore, webQuerySnapshot) {
    return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(webQuerySnapshot.docs[$map](platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webDocumentSnapshot => web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentSnapshot)), T$.DocumentSnapshotNToDocumentSnapshotPlatform()))[$toList](), webQuerySnapshot.docChanges()[$map](platform_interface_document_change.DocumentChangePlatform, dart.fn(webDocumentChange => web_utils.convertWebDocumentChange(firestore, webDocumentChange), T$.DocumentChangeToDocumentChangePlatform()))[$toList](), web_utils.convertWebSnapshotMetadata(webQuerySnapshot.metadata));
  };
  web_utils.convertWebDocumentSnapshot = function convertWebDocumentSnapshot(firestore, webSnapshot) {
    return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, dart.nullCheck(webSnapshot.ref).path, new (T$.IdentityMapOfString$dynamic()).from(["data", codec_utility.CodecUtility.decodeMapData(webSnapshot.data()), "metadata", new (T$.IdentityMapOfString$bool()).from(["hasPendingWrites", webSnapshot.metadata.hasPendingWrites, "isFromCache", webSnapshot.metadata.fromCache])]));
  };
  web_utils.convertWebDocumentChange = function convertWebDocumentChange(firestore, webDocumentChange) {
    return new platform_interface_document_change.DocumentChangePlatform.new(web_utils.convertWebDocumentChangeType(webDocumentChange.type), dart.asInt(webDocumentChange.oldIndex), dart.asInt(webDocumentChange.newIndex), web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentChange.doc)));
  };
  web_utils.convertWebDocumentChangeType = function convertWebDocumentChangeType(changeType) {
    switch (changeType[$toLowerCase]()) {
      case "added":
      {
        return platform_interface_document_change.DocumentChangeType.added;
      }
      case "modified":
      {
        return platform_interface_document_change.DocumentChangeType.modified;
      }
      case "removed":
      {
        return platform_interface_document_change.DocumentChangeType.removed;
      }
      default:
      {
        dart.throw(new core.FallThroughError.new());
      }
    }
  };
  web_utils.convertWebSnapshotMetadata = function convertWebSnapshotMetadata(webSnapshotMetadata) {
    return new snapshot_metadata.SnapshotMetadataPlatform.new(webSnapshotMetadata.hasPendingWrites, webSnapshotMetadata.fromCache);
  };
  web_utils.convertGetOptions = function convertGetOptions(options) {
    if (options == null) return null;
    let source = null;
    switch (options.source) {
      case C[1] || CT.C1:
      {
        source = "default";
        break;
      }
      case C[5] || CT.C5:
      {
        source = "cache";
        break;
      }
      case C[6] || CT.C6:
      {
        source = "server";
        break;
      }
      default:
      {
        source = "default";
        break;
      }
    }
    return {source: source};
  };
  web_utils.convertSetOptions = function convertSetOptions(options) {
    if (options == null) return null;
    let parsedOptions = null;
    if (options.merge != null) {
      parsedOptions = {merge: options.merge};
    } else if (options.mergeFields != null) {
      parsedOptions = {mergeFields: dart.nullCheck(options.mergeFields)[$map](core.String, dart.fn(e => e.components[$toList]()[$join]("."), T$.FieldPathToString()))[$toList]()};
    }
    return parsedOptions;
  };
  web_utils.convertFieldPath = function convertFieldPath(fieldPath) {
    return new dart.global.firebase.firestore.FieldPath(fieldPath.components[$toList]()[$join]("."));
  };
  dart.defineLazy(web_utils, {
    /*web_utils._kChangeTypeAdded*/get _kChangeTypeAdded() {
      return "added";
    },
    /*web_utils._kChangeTypeModified*/get _kChangeTypeModified() {
      return "modified";
    },
    /*web_utils._kChangeTypeRemoved*/get _kChangeTypeRemoved() {
      return "removed";
    }
  }, false);
  var _webFirestore = dart.privateName(cloud_firestore_web, "_webFirestore");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  cloud_firestore_web.FirebaseFirestoreWeb = class FirebaseFirestoreWeb extends platform_interface_firestore.FirebaseFirestorePlatform {
    static registerWith(registrar) {
      platform_interface_firestore.FirebaseFirestorePlatform.instance = new cloud_firestore_web.FirebaseFirestoreWeb.new();
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app});
    }
    collection(collectionPath) {
      return new collection_reference_web.CollectionReferenceWeb.new(this, this[_webFirestore], collectionPath);
    }
    batch() {
      return new write_batch_web.WriteBatchWeb.new(this[_webFirestore]);
    }
    clearPersistence() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'clearPersistence'));
    }
    useEmulator(host, port) {
      return this[_webFirestore].useEmulator(host, port);
    }
    collectionGroup(collectionPath) {
      return new query_web.QueryWeb.new(this, collectionPath, this[_webFirestore].collectionGroup(collectionPath), {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'disableNetwork'));
    }
    doc(documentPath) {
      return new document_reference_web.DocumentReferenceWeb.new(this, this[_webFirestore], documentPath);
    }
    enableNetwork() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'enableNetwork'));
    }
    snapshotsInSync() {
      return this[_webFirestore].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[7] || CT.C7;
      return async.async(dart.nullable(T), (function* runTransaction() {
        yield internals.guard(async.Future, dart.fn(() => this[_webFirestore].runTransaction(dart.fn(transaction => async.async(dart.nullable(T), (function*() {
          return transactionHandler(new transaction_web.TransactionWeb.new(this, this[_webFirestore], dart.nullCheck(transaction)));
        }).bind(this)), dart.fnType(async.Future$(dart.nullable(T)), [T$.TransactionN()]))).timeout(timeout), T$.VoidToFuture()));
        return null;
      }).bind(this));
    }
    set settings(settings) {
      let cacheSizeBytes = null;
      if (settings.cacheSizeBytes == null) {
        cacheSizeBytes = 40000000;
      } else if (settings.cacheSizeBytes === -1) {
        cacheSizeBytes = -1;
      } else {
        cacheSizeBytes = settings.cacheSizeBytes;
      }
      if (settings.host != null && settings.sslEnabled != null) {
        this[_webFirestore].settings({cacheSizeBytes: cacheSizeBytes, host: settings.host, ssl: settings.sslEnabled});
      } else {
        this[_webFirestore].settings({cacheSizeBytes: cacheSizeBytes});
      }
    }
    get settings() {
      return super.settings;
    }
    enablePersistence(settings = null) {
      if (settings != null) {
        let interopSettings = {synchronizeTabs: settings.synchronizeTabs};
        return internals.guard(T$.FutureOfvoid(), dart.fn(() => this[_webFirestore].enablePersistence(interopSettings), T$.VoidToFutureOfNull()));
      }
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'enablePersistence'));
    }
    terminate() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'terminate'));
    }
    waitForPendingWrites() {
      return internals.guard(T$.FutureOfvoid(), dart.bind(this[_webFirestore], 'waitForPendingWrites'));
    }
    loadBundle(bundle) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(this[_webFirestore].loadBundle(bundle));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[0] || CT.C0;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        let query = (yield this[_webFirestore].namedQuery(name));
        let snapshot = (yield query.get(web_utils.convertGetOptions(options)));
        return web_utils.convertWebQuerySnapshot(this, snapshot);
      }).bind(this));
    }
  };
  (cloud_firestore_web.FirebaseFirestoreWeb.new = function(opts) {
    let t2;
    let app = opts && 'app' in opts ? opts.app : null;
    this[_webFirestore] = firestore.getFirestoreInstance(core$.app((t2 = app, t2 == null ? null : t2.name)));
    cloud_firestore_web.FirebaseFirestoreWeb.__proto__.new.call(this, {appInstance: app});
    platform_interface_field_value_factory.FieldValueFactoryPlatform.instance = new field_value_factory_web.FieldValueFactoryWeb.new();
  }).prototype = cloud_firestore_web.FirebaseFirestoreWeb.prototype;
  dart.addTypeTests(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.addTypeCaches(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.setMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getMethods(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(cloud_firestore_web.FirebaseFirestoreWeb, I[7]);
  dart.setFieldSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getFields(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [_webFirestore]: dart.finalFieldType(firestore.Firestore)
  }));
  dart.trackLibraries("packages/cloud_firestore_web/src/write_batch_web.dart", {
    "package:cloud_firestore_web/src/write_batch_web.dart": write_batch_web,
    "package:cloud_firestore_web/src/transaction_web.dart": transaction_web,
    "package:cloud_firestore_web/src/field_value_factory_web.dart": field_value_factory_web,
    "package:cloud_firestore_web/src/query_web.dart": query_web,
    "package:cloud_firestore_web/src/collection_reference_web.dart": collection_reference_web,
    "package:cloud_firestore_web/src/document_reference_web.dart": document_reference_web,
    "package:cloud_firestore_web/src/utils/codec_utility.dart": codec_utility,
    "package:cloud_firestore_web/src/utils/web_utils.dart": web_utils,
    "package:cloud_firestore_web/cloud_firestore_web.dart": cloud_firestore_web
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["write_batch_web.dart","transaction_web.dart","field_value_factory_web.dart","query_web.dart","collection_reference_web.dart","document_reference_web.dart","utils/codec_utility.dart","utils/web_utils.dart","../cloud_firestore_web.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/cloud_firestore_web/src/write_batch_web.dart.lib.js"}');
  // Exports:
  return {
    src__write_batch_web: write_batch_web,
    src__transaction_web: transaction_web,
    src__field_value_factory_web: field_value_factory_web,
    src__query_web: query_web,
    src__collection_reference_web: collection_reference_web,
    src__document_reference_web: document_reference_web,
    src__utils__codec_utility: codec_utility,
    src__utils__web_utils: web_utils,
    cloud_firestore_web: cloud_firestore_web
  };
}));

//# sourceMappingURL=write_batch_web.dart.lib.js.map
